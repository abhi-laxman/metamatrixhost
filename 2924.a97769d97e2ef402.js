"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[2924],{81401:(C,p,s)=>{s.d(p,{$n:()=>N,$r:()=>D,EM:()=>T,Ec:()=>e,JJ:()=>f,Mm:()=>g,OC:()=>k,Sr:()=>L,UO:()=>v,Vj:()=>h,WU:()=>R,Y8:()=>c,Z7:()=>o,_6:()=>w,aJ:()=>u,dd:()=>_,dn:()=>n,et:()=>I,fe:()=>P,gD:()=>E,hE:()=>y,hY:()=>d,iM:()=>U,mt:()=>O,ow:()=>M,vS:()=>S});var r=s(49976);const l={esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"},d=(0,r.O)()(l),c=(0,r.O)()({...l,esriIntFeet:"international-feet",esriIntInches:"international-inches",esriIntMiles:"international-miles",esriIntNauticalMiles:"international-nautical-miles",esriIntYards:"international-yards"}),v=(0,r.O)()({esriAcres:"international-acres",esriAcresUS:"us-acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-international-feet",esriSquareFeetUS:"square-us-feet",esriSquareInches:"square-international-inches",esriSquareInchesUS:"square-us-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-international-miles",esriSquareMilesUS:"square-us-miles",esriSquareMillimeters:"square-millimeters",esriSquareYards:"square-international-yards",esriSquareYardsUS:"square-us-yards",esriUnknownAreaUnits:"unknown"}),o=(0,r.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),n=(0,r.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"}),u=(0,r.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),L=(0,r.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),y=((0,r.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,r.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),M=((0,r.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,r.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,r.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),f=(0,r.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),T=(0,r.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),D=(0,r.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),O=(0,r.O)()({1:"right",2:"left"},{useNumericKeys:!0}),U=(0,r.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),P=(0,r.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),w=(0,r.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),E=(0,r.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),N=(0,r.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),_=(0,r.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),g=(0,r.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),I=(0,r.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),k=(0,r.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),S=(0,r.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),h=(0,r.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),R=(0,r.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),e=(0,r.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})},89652:(C,p,s)=>{s.r(p),s.d(p,{default:()=>R});var r=s(10467),l=s(8189),d=s(89952),c=s(31178),v=s(2993),o=s(17715),n=s(48900),u=s(85211),y=(s(3248),s(35150),s(76576)),B=s(58226),K=s(37304),M=s(23632),f=s(34720),T=s(51882),D=s(22560),O=s(48393),U=s(88219),P=s(57052),w=s(57141),E=s(41474);const N=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],_={graphic:null,property:null,oldValue:null,newValue:null};function g(e){return e instanceof B.A||e instanceof K.A||e instanceof M.A||e instanceof f.A||e instanceof T.A||e instanceof D.A||e instanceof O.A}const S=new Set(["default"]);let h=class extends((0,U.e)(E.A)){constructor(){super(...arguments),this._graphics=new c.A,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map,this._interaction=null,this._loadInteractionPromise=null,this.interactive=!1}get _routeItems(){return new v.A({getCollections:()=>null==this.layer||this.destroyed?[]:[null!=this.layer.routeInfo?new c.A([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this.addHandles((0,n.wB)(()=>{const{interactive:e,suspended:t}=this;return{interactive:e,suspended:t}},({interactive:e,suspended:t})=>{const i=e&&!t;i&&this._getInteractionLoadPromise().then(a=>{a.enabled=this.interactive&&!this.suspended}),this._interaction&&(this._interaction.enabled=i)},n.pc)),this._updatingHandles.addOnCollectionChange(()=>this._routeItems,e=>this._routeItemsChanged(e),n.Vh)}destroy(){this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),this._get("_routeItems")?.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView(),this._interaction?.enabled&&(this._interaction.enabled=!1)}get selectedNetworkFeatures(){return this._interaction?.selectedNetworkFeatures??null}create(e){var t=this;return(0,r.A)(function*(){if(t.interactive)return(yield t._getInteractionLoadPromise()).create(e)})()}fetchPopupFeaturesAtLocation(e,t){var i=this;return(0,r.A)(function*(){return i._graphicsView.hitTest(e).filter(({popupTemplate:a})=>!!a)})()}highlight(e){let t;t=g(e)?[this._getNetworkFeatureUid(e)]:function k(e){return Array.isArray(e)&&e.length>0&&g(e[0])}(e)?e.map(a=>this._getNetworkFeatureUid(a)):function I(e){return c.A.isCollection(e)&&e.length&&g(e.at(0))}(e)?e.map(a=>this._getNetworkFeatureUid(a)).toArray():[e.uid];const i=t.filter(d.Ru);return i.length?(this._addHighlight(i),(0,o.hA)(()=>this._removeHighlight(i))):(0,o.hA)()}hitTest(e,t){var i=this;return(0,r.A)(function*(){if(i.suspended)return null;const a=i._graphicsView.hitTest(e).filter(d.Ru).map(m=>i._networkGraphicMap.get(m));if(!a.length)return null;const{layer:A}=i;return a.reverse().map(m=>({type:"route",layer:A,mapPoint:e,networkFeature:m}))})()}isUpdating(){return this._graphicsView.updating}moveEnd(){}remove(e){this._interaction?.remove(e)}update(e){this._graphicsView.processUpdate(e)}viewChange(){this._graphicsView.viewChange()}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const i=this._highlightIds.get(t);this._highlightIds.set(t,i+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_createGraphic(e){const t=e.toGraphic();return t.layer=this.layer,t.sourceLayer=this.layer,t}_createGraphicsView(){const e=this.view,i=new P.A(e.featuresTilingScheme);this._graphicsView=new w.A({container:i,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),view:e}),this.container.addChild(i),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(e){const t=this._networkGraphicMap.get(e);return N.indexOf(t.type)}_getInteractionLoadPromise(){return this._loadInteractionPromise||(this._loadInteractionPromise=this._loadInteraction(),this._updatingHandles.addPromise(this._loadInteractionPromise)),this._loadInteractionPromise}_getNetworkFeatureUid(e){return this._networkFeatureMap.has(e)?this._networkFeatureMap.get(e).uid:null}_loadInteraction(){var e=this;return(0,r.A)(function*(){const{layer:t,view:i}=e,{RouteLayerInteraction:a}=yield Promise.all([s.e(7269),s.e(224),s.e(4014)]).then(s.bind(s,94014));return e._interaction=new a({view:i,layer:t}),e._interaction})()}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const i=this._highlightIds.get(t)-1;0===i?this._highlightIds.delete(t):this._highlightIds.set(t,i)}this._updateHighlight()}_routeItemsChanged(e){if(e.removed.length){this._graphics.removeMany(e.removed.map(t=>{const i=this._networkFeatureMap.get(t);return this._networkFeatureMap.delete(t),this._networkGraphicMap.delete(i),i}));for(const t of e.removed)this.removeHandles(t)}if(e.added.length){this._graphics.addMany(e.added.map(t=>{const i=this._createGraphic(t);return null==i.symbol?null:(this._networkFeatureMap.set(t,i),this._networkGraphicMap.set(i,t),i)}).filter(d.Ru));for(const t of e.added)this.addHandles([(0,n.wB)(()=>t.geometry,(i,a)=>{this._updateGraphic(t,"geometry",i,a)}),(0,n.wB)(()=>t.symbol,(i,a)=>{this._updateGraphic(t,"symbol",i,a)}),(0,n.wB)(()=>t.popupTemplate,i=>{this._networkFeatureMap.has(t)&&(this._networkFeatureMap.get(t).popupTemplate=i)})],t);this._graphics.sort((t,i)=>this._getDrawOrder(t)-this._getDrawOrder(i))}}_updateGraphic(e,t,i,a){if(!this._networkFeatureMap.has(e)){const m=this._createGraphic(e);return this._networkFeatureMap.set(e,m),this._networkGraphicMap.set(m,e),void this._graphics.add(m)}const A=this._networkFeatureMap.get(e);A[t]=i,_.graphic=A,_.property=t,_.oldValue=a,_.newValue=i,this._graphicsView.graphicUpdateHandler(_)}_updateHighlight(){const e=Array.from(this._highlightIds.keys()),t=this._getHighlightBits(S.values());this._graphicsView.setHighlight(e.map(i=>({objectId:i,highlightFlags:t})))}};(0,l._)([(0,u.MZ)()],h.prototype,"_graphics",void 0),(0,l._)([(0,u.MZ)()],h.prototype,"_routeItems",null),(0,l._)([(0,u.MZ)()],h.prototype,"_interaction",void 0),(0,l._)([(0,u.MZ)()],h.prototype,"interactive",void 0),(0,l._)([(0,u.MZ)({readOnly:!0})],h.prototype,"selectedNetworkFeatures",null),h=(0,l._)([(0,y.$)("esri.views.2d.layers.RouteLayerView2D")],h);const R=h},57052:(C,p,s)=>{s.d(p,{A:()=>c});var r=s(69473),l=s(57641),d=s(62931);class c extends l.f{renderChildren(o){for(const n of this.children)n.setTransform(o.state);if(super.renderChildren(o),this._updateAttributeView(),this.children.some(n=>n.hasData)){switch(o.drawPhase){case r.S5.MAP:this._renderChildren(o,r.RI.All);break;case r.S5.HIGHLIGHT:this.hasHighlight&&this._renderHighlight(o)}this._boundsRenderer&&this._boundsRenderer.doRender(o)}}_renderHighlight(o){(0,d.lB)(o,!1,n=>{this._renderChildren(n,r.RI.Highlight)})}}}}]);