"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[9642],{21980:(vt,xt,tt)=>{tt.d(xt,{A:()=>q});var pt,J=tt(8189),ct=tt(5922),dt=tt(71065),rt=tt(77806),ft=tt(35150),H=tt(85211),mt=tt(48669),gt=tt(76576),at=tt(855),yt=tt(96115);let lt=pt=class extends dt.A{static createEmptyBand(P,U){return new(pt.getPixelArrayConstructor(P))(U)}static combineBandMasks(P){if(P.length<2)return P[0];const U=P[0].length,j=new Uint8Array(U).fill(255);for(let G=0;G<P.length;G++){const O=P[G];for(let F=0;F<U;F++)O[F]||(j[F]=0)}return j}static getPixelArrayConstructor(P){let U;switch(P){case"u1":case"u2":case"u4":case"u8":U=Uint8Array;break;case"u16":U=Uint16Array;break;case"u32":U=Uint32Array;break;case"s8":U=Int8Array;break;case"s16":U=Int16Array;break;case"s32":U=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":U=Float32Array;break;case"f64":U=Float64Array}return U}constructor(P){super(P),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(P){if(!P)return"f32";let U=P.toLowerCase();return["u1","u2","u4"].includes(U)?U="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(U)||(U="f32"),U}getPlaneCount(){return this.pixels?.length}addData(P){if(!P.pixels||P.pixels.length!==this.width*this.height)throw new ct.A("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(P.pixels),this.statistics.push(P.statistics??new at.z)}getAsRGBA(){const P=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(P);break;default:this._fillFrom8Bit(P)}return new Uint8ClampedArray(P)}getAsRGBAFloat(){const P=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(P),P}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(j=>function $(P,U){let j=1/0,G=-1/0;const O=P.length;let F,W=0;if(null!=U)for(F=0;F<O;F++)U[F]&&(W=P[F],j=W<j?W:j,G=W>G?W:G);else for(F=0;F<O;F++)W=P[F],j=W<j?W:j,G=W>G?W:G;return new at.z(j,G)}(j,this.mask));const P=this.mask;let U=0;if(null!=P)for(let j=0;j<P.length;j++)P[j]&&U++;else U=this.width*this.height;this.validPixelCount=U}clamp(P){if(!P||"f64"===P||"f32"===P||!this.pixels)return;const[U,j]=(0,yt.hP)(P),G=this.pixels,O=this.width*this.height,F=G.length;let W,et,V;const it=[];for(let S=0;S<F;S++){V=pt.createEmptyBand(P,O),W=G[S];for(let M=0;M<O;M++)et=W[M],V[M]=et>j?j:et<U?U:et;it.push(V)}this.pixels=it,this.pixelType=P}extractBands(P){const{pixels:U,statistics:j}=this;if(null==P||0===P.length||!U||0===U.length)return this;const G=U.length,O=P.some(M=>M>=U.length),F=G===P.length&&!P.some((M,C)=>M!==C);if(O||F)return this;const W=this.bandMasks?.length===G?P.map(M=>this.bandMasks[M]):void 0;let{mask:et,validPixelCount:V}=this;const{width:it,height:S}=this;return W?.length&&(et=pt.combineBandMasks(W),V=et.filter(M=>!!M).length),new pt({pixelType:this.pixelType,width:it,height:S,mask:et,bandMasks:W,validPixelCount:V,maskIsAlpha:this.maskIsAlpha,pixels:P.map(M=>U[M]),statistics:j&&P.map(M=>j[M])})}clone(){const P=new pt({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let U;null!=this.mask&&(P.mask=new Uint8Array(this.mask)),this.bandMasks&&(P.bandMasks=this.bandMasks.map(G=>new Uint8Array(G)));const j=pt.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){P.pixels=[];const G=!!this.pixels[0].slice;for(U=0;U<this.pixels.length;U++)P.pixels[U]=G?this.pixels[U].slice():new j(this.pixels[U])}if(this.statistics)for(P.statistics=[],U=0;U<this.statistics.length;U++)P.statistics[U]=(0,rt.o8)(this.statistics[U]);return P.premultiplyAlpha=this.premultiplyAlpha,P}_fillFrom8Bit(P){const{mask:U,maskIsAlpha:j,premultiplyAlpha:G,pixels:O}=this;if(!P||!O?.length)return void ft.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let F,W,et,V;F=W=et=O[0],O.length>=3?(W=O[1],et=O[2]):2===O.length&&(W=O[1]);const it=new Uint32Array(P),S=this.width*this.height;if(F.length===S)if(null!=U&&U.length===S)if(j)for(V=0;V<S;V++){const M=U[V];if(M){const C=M/255;it[V]=G?M<<24|et[V]*C<<16|W[V]*C<<8|F[V]*C:M<<24|et[V]<<16|W[V]<<8|F[V]}}else for(V=0;V<S;V++)U[V]&&(it[V]=255<<24|et[V]<<16|W[V]<<8|F[V]);else for(V=0;V<S;V++)it[V]=255<<24|et[V]<<16|W[V]<<8|F[V];else ft.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(P){const{pixels:U,mask:j,statistics:G}=this;if(!P||!U?.length)return void ft.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const O=this.pixelType;let F=1,W=0,et=1;if(G&&G.length>0){for(const D of G)null!=D.minValue&&(W=Math.min(W,D.minValue)),null!=D.maxValue&&null!=D.minValue&&(et=Math.max(et,D.maxValue-D.minValue));F=255/et}else{let D=255;"s8"===O?(W=-128,D=127):"u16"===O?D=65535:"s16"===O?(W=-32768,D=32767):"u32"===O?D=4294967295:"s32"===O?(W=-2147483648,D=2147483647):"f32"===O?(W=-34e38,D=34e38):"f64"===O&&(W=-Number.MAX_VALUE,D=Number.MAX_VALUE),F=255/(D-W)}const V=new Uint32Array(P),it=this.width*this.height;let S,M,C,E,L;if(S=M=C=U[0],S.length!==it)return ft.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(U.length>=2)if(M=U[1],U.length>=3&&(C=U[2]),null!=j&&j.length===it)for(E=0;E<it;E++)j[E]&&(V[E]=255<<24|(C[E]-W)*F<<16|(M[E]-W)*F<<8|(S[E]-W)*F);else for(E=0;E<it;E++)V[E]=255<<24|(C[E]-W)*F<<16|(M[E]-W)*F<<8|(S[E]-W)*F;else if(null!=j&&j.length===it)for(E=0;E<it;E++)L=(S[E]-W)*F,j[E]&&(V[E]=255<<24|L<<16|L<<8|L);else for(E=0;E<it;E++)L=(S[E]-W)*F,V[E]=255<<24|L<<16|L<<8|L}_fillFrom32Bit(P){const{pixels:U,mask:j}=this;if(!P||!U?.length)return ft.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let G,O,F,W;G=O=F=U[0],U.length>=3?(O=U[1],F=U[2]):2===U.length&&(O=U[1]);const et=this.width*this.height;if(G.length!==et)return ft.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let V=0;if(null!=j&&j.length===et)for(W=0;W<et;W++)P[V++]=G[W],P[V++]=O[W],P[V++]=F[W],P[V++]=1&j[W];else for(W=0;W<et;W++)P[V++]=G[W],P[V++]=O[W],P[V++]=F[W],P[V++]=1}};(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"width",void 0),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"height",void 0),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"pixelType",void 0),(0,J._)([(0,mt.w)("pixelType")],lt.prototype,"castPixelType",null),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"validPixelCount",void 0),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"mask",void 0),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"maskIsAlpha",void 0),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"pixels",void 0),(0,J._)([(0,H.MZ)()],lt.prototype,"premultiplyAlpha",void 0),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"statistics",void 0),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"depthCount",void 0),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"noDataValues",void 0),(0,J._)([(0,H.MZ)({json:{write:!0}})],lt.prototype,"bandMasks",void 0),lt=pt=(0,J._)([(0,gt.$)("esri.layers.support.PixelBlock")],lt);const q=lt},855:(vt,xt,tt)=>{tt.d(xt,{z:()=>J});class J{constructor(dt=null,rt=null,ft=null){this.minValue=dt,this.maxValue=rt,this.noDataValue=ft}}},96115:(vt,xt,tt)=>{tt.d(xt,{$p:()=>gt,Sp:()=>lt,X1:()=>ft,hP:()=>rt,yM:()=>mt,zw:()=>H});const J=9999999e31,ct=2e-7,dt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function rt($){return dt[$]??[-34028234663852886e22,34028234663852886e22]}function ft($,q){return null==$||null==q?"s32":$<0?$>=-128&&q<128?"s8":$>=-32768&&q<32768?"s16":"s32":q<256?"u8":q<65536?"u16":"u32"}function H($){return($?.startsWith("s")||$?.startsWith("u"))??!1}function mt($,q,P,U){let[j,G]=rt(P);const O=H(P);return O&&(j-=1e-5,G+=1e-5),O?P.startsWith("u")?function at($,q,P,U){const[j,G]=U;for(let O=0;O<q.length;O++)if(q[O]){const F=$[O];F<j||F>G?q[O]=0:P[O]=F+.5|0}}($,q,U,[j,G]):function yt($,q,P,U){const[j,G]=U;for(let O=0;O<q.length;O++)if(q[O]){const F=$[O];F<j||F>G?q[O]=0:P[O]=F+(F>0?.5:-.5)|0}}($,q,U,[j,G]):function pt($,q,P,U){const[j,G]=U;for(let O=0;O<q.length;O++)if(q[O]){const F=$[O];F<j||F>G?q[O]=0:P[O]=F}}($,q,U,[j,G])}function gt($,q){for(let P=0;P<q.length;P++)q[P]&&isNaN($[P])&&(q[P]=0,$[P]=0)}function lt($,q,P){if($.depthCount&&$.depthCount>1)return;const{pixels:U,statistics:j,pixelType:G}=$,F=$.bandMasks??[],W=$.mask??new Uint8Array(U[0].length).fill(255),et="f32"===G||"f64"===G,V=rt(G);let it=!1;for(let M=0;M<U.length;M++){const C="number"==typeof q?q:q[M];if(null==C)continue;if((j?.[M]?.minValue??V[0])>C+Number.EPSILON||(j?.[M]?.maxValue??V[1])<C-Number.EPSILON)continue;const D=F[M]||W.slice(),u=U[M],y=P?.customFloatTolerance;if(et&&0!==y){let m=y;m||(m=Math.abs(C)>=J?ct*Math.abs(C):"f32"===G?2**-23:Number.EPSILON);for(let g=0;g<u.length;g++)D[g]&&Math.abs(u[g]-C)<m&&(u[g]=0,D[g]=0,W[g]=0,it=!0)}else for(let m=0;m<u.length;m++)D[m]&&u[m]===C&&(u[m]=0,D[m]=0,W[m]=0,it=!0);F[M]=D}if(it){const M=$.bandMasks||$.pixels.length>1?F:null;P?.matchAllNoData?$.mask=M&&M.length>1?function S(M){if(M.length<2)return M[0];const C=M[0].length,E=new Uint8Array(C).fill(0);for(let L=0;L<M.length;L++){const D=M[L];for(let u=0;u<C;u++)D[u]&&(E[u]=255)}return E}(M):W:($.bandMasks=M,$.mask=W)}it&&"updateStatistics"in $&&$.updateStatistics()}},40275:(vt,xt,tt)=>{tt.d(xt,{$Q:()=>u,$i:()=>R,AB:()=>H,Ew:()=>q,Hx:()=>$,IB:()=>dt,J$:()=>g,LY:()=>et,QF:()=>k,UK:()=>lt,Wb:()=>rt,Wt:()=>F,Wy:()=>gt,XU:()=>O,dK:()=>G,eH:()=>pt,et:()=>ft,lD:()=>m,qL:()=>yt,z$:()=>M,z7:()=>it,zg:()=>at});var dt,rt,t,J=tt(21980),ct=tt(96115);(t=dt||(dt={}))[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll",function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(rt||(rt={}));const ft=6;function H(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function gt(t){if(!t?.length||t.some(h=>!H(h)))return null;if(1===t.length)return t[0]?.clone()??null;const l=t,{width:e,height:n,pixelType:s}=l[0];if(l.some(h=>h.width!==e||h.height!==n))return null;const i=l.map(({mask:h})=>h).filter(h=>null!=h);let o=null;i.length&&(o=new Uint8Array(e*n),o.set(i[0]),i.length>1&&j(i.slice(1),o));const r=[];l.forEach(({pixels:h})=>r.push(...h));const c=l.map(({statistics:h})=>h).filter(h=>h?.length),a=[];return c.forEach(h=>a.push(...h)),new J.A({pixelType:s,width:e,height:n,mask:o,pixels:r,statistics:a.length?a:null})}function at(t){if(!t)return;const l=t.colormap;if(!l||0===l.length)return;const e=l.sort((f,p)=>f[0]-p[0]);let n=0;e[0][0]<0&&(n=e[0][0]);const s=Math.max(256,e[e.length-1][0]-n+1),i=new Uint8Array(4*s),o=[];let r,c=0,a=0;const h=5===e[0].length;if(s>65536)return e.forEach(f=>{o[f[0]-n]=h?f.slice(1):f.slice(1).concat([255])}),{indexed2DColormap:o,offset:n,alphaSpecified:h};if(t.fillUnspecified)for(r=e[a],c=r[0]-n;c<s;c++)i[4*c]=r[1],i[4*c+1]=r[2],i[4*c+2]=r[3],i[4*c+3]=h?r[4]:255,c===r[0]-n&&(r=a===e.length-1?r:e[++a]);else for(c=0;c<e.length;c++)r=e[c],a=4*(r[0]-n),i[a]=r[1],i[a+1]=r[2],i[a+2]=r[3],i[a+3]=h?r[4]:255;return{indexedColormap:i,offset:n,alphaSpecified:h}}function yt(t,l){if(!H(t)||!l||!l.indexedColormap&&!l.indexed2DColormap)return t;const e=t.clone(),n=e.pixels;let s=e.mask;const i=e.width*e.height;if(1!==n.length)return t;const{indexedColormap:o,indexed2DColormap:r,offset:c,alphaSpecified:a}=l;let h=0;const f=n[0],p=new Uint8Array(f.length),x=new Uint8Array(f.length),d=new Uint8Array(f.length);let _,w=0;if(o){const v=o.length-1;if(null!=s)for(h=0;h<i;h++)s[h]&&(w=4*(f[h]-c),w<c||w>v?s[h]=0:(p[h]=o[w],x[h]=o[w+1],d[h]=o[w+2],s[h]=o[w+3]));else{for(s=new Uint8Array(i),h=0;h<i;h++)w=4*(f[h]-c),w<c||w>v?s[h]=0:(p[h]=o[w],x[h]=o[w+1],d[h]=o[w+2],s[h]=o[w+3]);e.mask=s}}else if(r)if(null!=s)for(h=0;h<i;h++)s[h]&&(_=r[f[h]],p[h]=_[0],x[h]=_[1],d[h]=_[2],s[h]=_[3]);else{for(s=new Uint8Array(i),h=0;h<i;h++)_=r[f[h]],p[h]=_[0],x[h]=_[1],d[h]=_[2],s[h]=_[3];e.mask=s}return e.pixels=[p,x,d],e.statistics=null,e.pixelType="u8",e.maskIsAlpha=a,e}function pt(t,l){if(!H(t))return null;const{pixels:e,mask:n}=t,s=e.length;let i=l.lut;const{offset:o}=l;i&&1===i[0].length&&(i=e.map(()=>i));const r=[],c=l.outputPixelType||"u8";for(let h=0;h<s;h++){const f=lt(e[h],n,i[h],o||0,c);r.push(f)}const a=new J.A({width:t.width,height:t.height,pixels:r,mask:n,pixelType:c});return a.updateStatistics(),a}function lt(t,l,e,n,s){const i=t.length,o=J.A.createEmptyBand(s,i);if(l)for(let r=0;r<i;r++)l[r]&&(o[r]=e[t[r]-n]);else for(let r=0;r<i;r++)o[r]=e[t[r]-n];return o}function $(t,l){if(!H(t))return null;const e=t.clone(),{pixels:n}=e,s=e.width*e.height,i=l.length,o=Math.floor(i/2),r=l[Math.floor(o)],c=n[0];let a,h,f,p,x,d,_=!1;const w=new Uint8Array(s),v=new Uint8Array(s),T=new Uint8Array(s);let b=e.mask;const B=4===l[0].mappedColor.length;for(b||(b=new Uint8Array(s),b.fill(B?255:1),e.mask=b),x=0;x<s;x++)if(b[x]){for(a=c[x],_=!1,d=o,h=r,f=0,p=i-1;p-f>1;){if(a===h.value){_=!0;break}a>h.value?f=d:p=d,d=Math.floor((f+p)/2),h=l[Math.floor(d)]}_||(a===l[f].value?(h=l[f],_=!0):a===l[p].value?(h=l[p],_=!0):a<l[f].value?(_=!1,h=null):a>l[f].value&&(a<l[p].value?(h=l[f],_=!0):p===i-1?(_=!1,h=null):(h=l[p],_=!0))),_?(w[x]=h.mappedColor[0],v[x]=h.mappedColor[1],T[x]=h.mappedColor[2],b[x]=h.mappedColor[3]):w[x]=v[x]=T[x]=b[x]=0}return e.pixels=[w,v,T],e.mask=b,e.pixelType="u8",e.maskIsAlpha=B,e}function q(t,l){if(!H(t))return null;const{width:e,height:n}=t,{inputRanges:s,outputValues:i,outputPixelType:o,noDataRanges:r,allowUnmatched:c,isLastInputRangeInclusive:a}=l,h=t.pixels[0],f=J.A.createEmptyBand(o,h.length),p=t.mask,x=new Uint8Array(e*n);p?x.set(p):x.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,_=s.map(B=>B-d);_[0]=s[0],_[_.length-1]=s[s.length-1]+(a?1e-6:0);const w=s.length/2,[v,T]=(0,ct.hP)(o);for(let B=0;B<n;B++)for(let I=0;I<e;I++){const N=B*e+I;if(x[N]){const z=h[N];let Z=!1;for(let Y=w-1;Y>=0;Y--)if(z===_[2*Y]||z>_[2*Y]&&z<_[2*Y+1]){f[N]=i[Y],Z=!0;break}Z||(c?f[N]=z>T?T:z<v?v:z:x[N]=0)}}const b=r?.length;if(b)for(let B=0;B<n;B++)for(let I=0;I<e;I++){const N=B*e+I;if(!p||p[N]){const z=h[N];for(let Z=0;Z<b;Z+=2)if(z>=r[Z]&&z<=r[Z+1]){f[N]=0,x[N]=0;break}}}return new J.A({width:e,height:n,pixelType:o,pixels:[f],mask:x})}function P(t,l,e,n){const s=null!=e&&e.length>=2?new Set(e):null,i=1===e?.length?e[0]:null,o=!!l?.length;for(let r=0;r<t.length;r++)if(n[r]){const c=t[r];if(o){let a=!1;for(let h=0;h<l.length;h+=2)if(c>=l[h]&&c<=l[h+1]){a=!0;break}a||(n[r]=0)}n[r]&&(c===i||s?.has(c))&&(n[r]=0)}}function U(t,l){const e=t[0].length;for(let n=0;n<e;n++)if(l[n]){let s=!1;for(let i=0;i<t.length;i++)if(t[i][n]){s=!0;break}s||(l[n]=0)}}function j(t,l){const e=t[0].length;for(let n=0;n<e;n++)if(l[n]){let s=!1;for(let i=0;i<t.length;i++)if(0===t[i][n]){s=!0;break}s&&(l[n]=0)}}function G(t,l){if(!H(t))return null;const{width:e,height:n,pixels:s}=t,i=e*n,o=new Uint8Array(i);t.mask?o.set(t.mask):o.fill(255);const r=s.length,{includedRanges:c,noDataValues:a,outputPixelType:h,matchAll:f,lookups:p}=l;if(p){const x=[];for(let d=0;d<r;d++){const _=p[d],w=lt(s[d],o,_.lut,_.offset||0,"u8");x.push(w)}1===x.length?o.set(x[0]):f?U(x,o):j(x,o)}else if(f){const x=[];for(let d=0;d<r;d++){const _=new Uint8Array(i);_.set(o),P(s[d],c?.slice(2*d,2*d+2),a?.[d],_),x.push(_)}1===x.length?o.set(x[0]):U(x,o)}else for(let x=0;x<r;x++)P(s[x],c?.slice(2*x,2*x+2),a?.[x],o);return new J.A({width:e,height:n,pixelType:h,pixels:s,mask:o})}function O(t){const{srcPixelType:l,inputRanges:e,outputValues:n,allowUnmatched:s,noDataRanges:i,isLastInputRangeInclusive:o,outputPixelType:r}=t;if("u8"!==l&&"s8"!==l&&"u16"!==l&&"s16"!==l)return null;const c=l.includes("16")?65536:256,a=l.includes("s")?-c/2:0,h=J.A.createEmptyBand(r,c),f=new Uint8Array(c);s&&f.fill(255);const[p,x]=(0,ct.hP)(r);if(e?.length&&n?.length){const _=e.map(w=>w-1e-6);_[0]=e[0],o&&(_[_.length-1]=e[e.length-1]);for(let w=0;w<_.length;w++){const v=n[w]>x?x:n[w]<p?p:n[w],T=Math.ceil(_[2*w]-a),b=Math.floor(_[2*w+1]-a);for(let B=T;B<=b;B++)h[B]=v,f[B]=255}}if(i?.length)for(let d=0;d<i.length;d++){const _=Math.ceil(i[2*d]-a),w=Math.floor(i[2*d+1]-a);for(let v=_;v<=w;v++)f[v]=0}return{lut:h,offset:a,mask:f}}function F(t,l,e){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const n=t.includes("16")?65536:256,s=t.includes("s")?-n/2:0,i=new Uint8Array(n);if(l)for(let o=0;o<l.length;o++){const r=Math.ceil(l[2*o]-s),c=Math.floor(l[2*o+1]-s);for(let a=r;a<=c;a++)i[a]=255}else i.fill(255);if(e)for(let o=0;o<e.length;o++)i[e[o]-s]=0;return{lut:i,offset:s}}function et(t,l){if(!t||0===t.length)return null;const e=t.find(d=>d.pixelBlock);if(null==e?.pixelBlock)return null;const n=(e.extent.xmax-e.extent.xmin)/e.pixelBlock.width,s=(e.extent.ymax-e.extent.ymin)/e.pixelBlock.height,i=.01*Math.min(n,s),o=t.sort((d,_)=>Math.abs(d.extent.ymax-_.extent.ymax)>i?_.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-_.extent.xmin)>i?d.extent.xmin-_.extent.xmin:0),r=Math.min.apply(null,o.map(d=>d.extent.xmin)),c=Math.min.apply(null,o.map(d=>d.extent.ymin)),a=Math.max.apply(null,o.map(d=>d.extent.xmax)),h=Math.max.apply(null,o.map(d=>d.extent.ymax)),f={x:Math.round((l.xmin-r)/n),y:Math.round((h-l.ymax)/s)},p={width:Math.round((a-r)/n),height:Math.round((h-c)/s)},x={width:Math.round((l.xmax-l.xmin)/n),height:Math.round((l.ymax-l.ymin)/s)};return Math.round(p.width/e.pixelBlock.width)*Math.round(p.height/e.pixelBlock.height)!==o.length||f.x<0||f.y<0||p.width<x.width||p.height<x.height?null:{extent:l,pixelBlock:it(o.map(d=>d.pixelBlock),p,{clipOffset:f,clipSize:x})}}function V(t,l,e,n,s,i){const{width:o,height:r}=e.block,{x:c,y:a}=e.offset,{width:h,height:f}=e.mosaic,p=function W(t,l,e,n,s,i,o,r){return{xmin:s<=e*t?0:s<e*t+t?s-e*t:t,ymin:i<=n*l?0:i<n*l+l?i-n*l:l,xmax:s+o<=e*t?0:s+o<e*t+t?s+o-e*t:t,ymax:i+r<=n*l?0:i+r<n*l+l?i+r-n*l:l}}(o,r,n,s,c,a,h,f);let x=0,d=0;if(i){const _=i.hasGCSSShiftTransform?360:i.halfWorldWidth??0,w=o*i.resolutionX,v=i.startX+n*w;v<_&&v+w>_?d=i.rightPadding:v>=_&&(x=i.leftMargin-i.rightPadding,d=0)}if(p.xmax-=d,"number"!=typeof l)for(let _=p.ymin;_<p.ymax;_++){const w=(s*r+_-a)*h+(n*o-c)+x,v=_*o;for(let T=p.xmin;T<p.xmax;T++)t[w+T]=l[v+T]}else for(let _=p.ymin;_<p.ymax;_++){const w=(s*r+_-a)*h+(n*o-c)+x;for(let v=p.xmin;v<p.xmax;v++)t[w+v]=l}}function it(t,l,e={}){const{clipOffset:n,clipSize:s,alignmentInfo:i,blockWidths:o}=e;if(o)return function S(t,l,e){const n=t.find(w=>null!=w);if(null==n)return null;const s=t.some(w=>null==w||!!w.mask),{width:i,height:o}=l,r=s?new Uint8Array(i*o):null,{blockWidths:c}=e,a=[],h=n.getPlaneCount(),f=J.A.getPixelArrayConstructor(n.pixelType);if(s)for(let w=0,v=0;w<t.length;v+=c[w],w++){const T=t[w];if(!H(T))continue;const b=T.mask;for(let B=0;B<o;B++)for(let I=0;I<c[w];I++)r[B*i+I+v]=null==b?255:b[B*T.width+I]}const p=t.some(w=>w?.bandMasks&&w.bandMasks.length>1),x=p?[]:void 0,d=i*o;for(let w=0;w<h;w++){const v=new f(d),T=p?new Uint8Array(d):void 0;for(let b=0,B=0;b<t.length;B+=c[b],b++){const I=t[b];if(!H(I))continue;const N=I.pixels[w];if(null!=N){for(let z=0;z<o;z++)for(let Z=0;Z<c[b];Z++)v[z*i+Z+B]=N[z*I.width+Z];if(T){const z=I.bandMasks?.[w]??I.mask;for(let Z=0;Z<o;Z++)for(let Y=0;Y<c[b];Y++)T[Z*i+Y+B]=z?z[Z*I.width+Y]:255}}}a.push(v),x&&T&&x.push(T)}const _=new J.A({width:i,height:o,mask:r,bandMasks:x,pixels:a,pixelType:n.pixelType});return _.updateStatistics(),_}(t,l,{blockWidths:o});const r=t.find(X=>H(X));if(null==r)return null;const c=s?s.width:l.width,a=s?s.height:l.height,h=r.width,f=r.height,p=l.width/h,x=l.height/f,d={offset:n||{x:0,y:0},mosaic:s||l,block:{width:h,height:f}},_=r.pixelType,w=J.A.getPixelArrayConstructor(_),v=r.pixels.length,T=[];let b,B;for(let X=0;X<v;X++){B=new w(c*a);for(let nt=0;nt<x;nt++)for(let K=0;K<p;K++){const st=t[nt*p+K];H(st)&&(b=st.pixels[X],V(B,b,d,K,nt,i))}T.push(B)}const I=t.some(X=>null==X||null!=X.mask&&X.mask.length>0),N=t.some(X=>X?.bandMasks&&X.bandMasks.length>1),z=I?new Uint8Array(c*a):void 0,Z=N?[]:void 0;if(z){for(let X=0;X<x;X++)for(let nt=0;nt<p;nt++){const K=t[X*p+nt];V(z,(null!=K?K.mask:null)??(K?255:0),d,nt,X,i)}if(Z)for(let X=0;X<v;X++){const nt=new Uint8Array(c*a);for(let K=0;K<x;K++)for(let st=0;st<p;st++){const ut=t[K*p+st];V(nt,ut?.bandMasks?.[X]??ut?.mask??(ut?255:0),d,st,K,i)}Z.push(nt)}}const Y=new J.A({width:c,height:a,pixels:T,pixelType:_,bandMasks:Z,mask:z});return Y.updateStatistics(),Y}function M(t,l,e){if(!H(t))return null;const{width:n,height:s}=t,i=l.x,o=l.y,r=e.width+i,c=e.height+o;if(i<0||o<0||r>n||c>s||0===i&&0===o&&r===n&&c===s)return t;t.mask||(t.mask=new Uint8Array(n*s));const a=t.mask;for(let h=0;h<s;h++){const f=h*n;for(let p=0;p<n;p++)a[f+p]=h<o||h>=c||p<i||p>=r?0:1}return t.updateStatistics(),t}function E(t){if(0===t.size)return 0;let l=0,e=-1,n=0;const s=t.keys();let i=s.next();for(;!i.done;)n=t.get(i.value),n>l&&(e=i.value,l=n),i=s.next();return e}function L(t,l,e){if(0===e)return;const n=t.get(l);1===n?t.delete(l):t.set(l,n-1)}function D(t,l,e){0!==e&&t.set(l,t.has(l)?t.get(l)+1:1)}function u(t,l,e){let{x:n,y:s}=l;const{width:i,height:o}=e;if(0===n&&0===s&&o===t.height&&i===t.width)return t;const{width:r,height:c}=t,a=Math.max(0,s),h=Math.max(0,n),f=Math.min(n+i,r),p=Math.min(s+o,c);if(f<0||p<0||!H(t))return null;n=Math.max(0,-n),s=Math.max(0,-s);const{pixels:x}=t,d=i*o,_=x.length,w=[];for(let B=0;B<_;B++){const I=x[B],N=J.A.createEmptyBand(t.pixelType,d);for(let z=a;z<p;z++){const Z=z*r;let Y=(z+s-a)*i+n;for(let X=h;X<f;X++)N[Y++]=I[Z+X]}w.push(N)}const v=new Uint8Array(d),T=t.mask;for(let B=a;B<p;B++){const I=B*r;let N=(B+s-a)*i+n;for(let z=h;z<f;z++)v[N++]=T?T[I+z]:1}const b=new J.A({width:e.width,height:e.height,pixelType:t.pixelType,pixels:w,mask:v});return b.updateStatistics(),b}function y(t,l=!0){if(!H(t))return null;const{pixels:e,width:n,height:s,mask:i,pixelType:o}=t,r=[],c=Math.round(n/2),a=Math.round(s/2),h=s-1,f=n-1;for(let x=0;x<e.length;x++){const d=e[x],_=J.A.createEmptyBand(o,c*a);let w=0;for(let v=0;v<s;v+=2)for(let T=0;T<n;T+=2){const b=d[v*n+T];if(l){const B=T===f?b:d[v*n+T+1],I=v===h?b:d[v*n+T+n];_[w++]=(b+B+I+(T===f?I:v===h?B:d[v*n+T+n+1]))/4}else _[w++]=b}r.push(_)}let p=null;if(null!=i){p=new Uint8Array(c*a);let x=0;for(let d=0;d<s;d+=2)for(let _=0;_<n;_+=2){const w=i[d*n+_];if(l){const v=_===f?w:i[d*n+_+1],T=d===h?w:i[d*n+_+n];p[x++]=w*v*T*(_===f?T:d===h?v:i[d*n+_+n+1])?1:0}else p[x++]=w}}return new J.A({width:c,height:a,pixelType:o,pixels:r,mask:p})}function m(t,l,e=0,n=!0){if(!H(t))return null;const{width:s,height:i}=l;let{width:o,height:r}=t;const c=new Map,a={x:0,y:0},h=1+e;let f=t;for(let p=0;p<h;p++){const x=Math.ceil(o/s),d=Math.ceil(r/i);for(let _=0;_<d;_++){a.y=_*i;for(let w=0;w<x;w++){a.x=w*s;const v=u(f,a,l);c.set(`${p}/${_}/${w}`,v)}}p<h-1&&(f=y(f,n)),o=Math.round(o/2),r=Math.round(r/2)}return c}function g(t){const{pixelBlock:l,tileSize:e,level:n,row:s,col:i,useBilinear:o}=t;if(!H(l))return null;const{width:r,height:c}=e,a=2**n,h=a*r,f=a*c;let p=u(l,{y:s*f,x:i*h},{width:h,height:f});if(!p)return null;for(let x=n;x>0;x--)p=y(p,o);return p}function A(t,l,e,n,s=0){const{width:i,height:o}=t,{width:r,height:c}=l,a=n.cols,h=n.rows,f=Math.ceil(r/a-.1/a),p=Math.ceil(c/h-.1/h);let x,d,_,w,v,T,b;const B=f*a,I=B*p*h,N=new Float32Array(I),z=new Float32Array(I),Z=new Uint32Array(I),Y=new Uint32Array(I);let X,nt,K=0;for(let st=0;st<p;st++)for(let ut=0;ut<f;ut++){x=12*(st*f+ut),d=e[x],_=e[x+1],w=e[x+2],v=e[x+3],T=e[x+4],b=e[x+5];for(let ht=0;ht<h;ht++){K=(st*h+ht)*B+ut*a,nt=(ht+.5)/h;for(let Q=0;Q<ht;Q++)X=(Q+.5)/a,N[K+Q]=(d*X+_*nt+w)*i+s,z[K+Q]=(v*X+T*nt+b)*o+s,Z[K+Q]=Math.floor(N[K+Q]),Y[K+Q]=Math.floor(z[K+Q])}x+=6,d=e[x],_=e[x+1],w=e[x+2],v=e[x+3],T=e[x+4],b=e[x+5];for(let ht=0;ht<h;ht++){K=(st*h+ht)*B+ut*a,nt=(ht+.5)/h;for(let Q=ht;Q<a;Q++)X=(Q+.5)/a,N[K+Q]=(d*X+_*nt+w)*i+s,z[K+Q]=(v*X+T*nt+b)*o+s,Z[K+Q]=Math.floor(N[K+Q]),Y[K+Q]=Math.floor(z[K+Q])}}return{offsets_x:N,offsets_y:z,offsets_xi:Z,offsets_yi:Y,gridWidth:B}}function k(t,l){const{coefficients:e,spacing:n}=l,{offsets_x:s,offsets_y:i,gridWidth:o}=A(t,t,e,{rows:n[0],cols:n[1]}),{width:r,height:c}=t,a=new Float32Array(r*c),h=180/Math.PI;for(let f=0;f<c;f++)for(let p=0;p<r;p++){const x=f*o+p,d=0===f?x:x-o,_=f===c-1?x:x+o,w=s[d]-s[_],v=i[_]-i[d];if(isNaN(w)||isNaN(v))a[f*r+p]=90;else{let T=Math.atan2(v,w)*h;T=(360+T)%360,a[f*r+p]=T}}return a}function R(t,l,e,n,s="nearest"){if(!H(t))return null;"majority"===s&&(t=function C(t){if(!H(t))return null;const l=t.clone(),{width:e,height:n,pixels:s}=t,i=s[0],o=l.pixels[0],r=t.mask;for(let c=2;c<n-1;c++){const a=new Map;for(let f=c-2;f<c+2;f++)for(let p=0;p<4;p++){const x=f*e+p;D(a,i[x],r?r[x]:1)}o[c*e]=E(a),o[c*e+1]=o[c*e+2]=o[c*e];let h=3;for(;h<e-1;h++){let f=(c-2)*e+h+1;D(a,i[f],r?r[f]:1),f=(c-1)*e+h+1,D(a,i[f],r?r[f]:1),f=c*e+h+1,D(a,i[f],r?r[f]:1),f=(c+1)*e+h+1,D(a,i[f],r?r[f]:1),f=(c-2)*e+h-3,L(a,i[f],r?r[f]:1),f=(c-1)*e+h-3,L(a,i[f],r?r[f]:1),f=c*e+h-3,L(a,i[f],r?r[f]:1),f=(c+1)*e+h-3,L(a,i[f],r?r[f]:1),o[c*e+h]=E(a)}o[c*e+h+1]=o[c*e+h]}for(let c=0;c<e;c++)o[c]=o[e+c]=o[2*e+c],o[(n-1)*e+c]=o[(n-2)*e+c];return l.updateStatistics(),l}(t));const{pixels:i,mask:o,bandMasks:r,pixelType:c}=t,a=t.width,h=t.height,f=J.A.getPixelArrayConstructor(c),p=i.length,{width:x,height:d}=l;let _=!1;for(let K=0;K<e.length;K+=3)-1===e[K]&&-1===e[K+1]&&-1===e[K+2]&&(_=!0);const{offsets_x:w,offsets_y:v,offsets_xi:T,offsets_yi:b,gridWidth:B}=A({width:a,height:h},l,e,n,"majority"===s?.5:0);let I;const N=(K,st,ut,ht)=>{const Q=K instanceof Float32Array||K instanceof Float64Array?0:.5;for(let ot=0;ot<d;ot++){I=ot*B;for(let _t=0;_t<x;_t++){if(w[I]<0||v[I]<0)K[ot*x+_t]=0;else if(ht)K[ot*x+_t]=st[T[I]+b[I]*a];else{const wt=Math.floor(w[I]),Mt=Math.floor(v[I]),At=Math.ceil(w[I]),kt=Math.ceil(v[I]),Pt=w[I]-wt,bt=v[I]-Mt;K[ot*x+_t]=!ut||ut[wt+Mt*a]&&ut[At+Mt*a]&&ut[wt+kt*a]&&ut[At+kt*a]?(1-bt)*((1-Pt)*st[wt+Mt*a]+Pt*st[At+Mt*a])+bt*((1-Pt)*st[wt+kt*a]+Pt*st[At+kt*a])+Q:st[T[I]+b[I]*a]}I++}}},z=[];let Z;const Y=r?.length===p,X=[];for(let K=0;K<p;K++){if(Y){const st=new Uint8Array(x*d);N(st,r[K],r[K],!0),X.push(st)}Z=new f(x*d),N(Z,i[K],Y?r[K]:o,"nearest"===s||"majority"===s),z.push(Z)}const nt=new J.A({width:x,height:d,pixelType:c,pixels:z,bandMasks:Y?X:void 0});if(null!=o)nt.mask=new Uint8Array(x*d),N(nt.mask,o,o,!0);else if(_){nt.mask=new Uint8Array(x*d);for(let K=0;K<x*d;K++)nt.mask[K]=w[K]<0||v[K]<0?0:1}return nt.updateStatistics(),nt}},50444:(vt,xt,tt)=>{tt.d(xt,{$Q:()=>P,FI:()=>$,KL:()=>gt,Lu:()=>yt,MD:()=>mt,Rn:()=>q,Ud:()=>E,Wu:()=>D,Y2:()=>lt,gf:()=>L});var J=tt(49976),ct=tt(21980),dt=tt(40275);const rt=new Map;rt.set("meter-per-second",1),rt.set("kilometer-per-hour",.277778),rt.set("knots",.514444),rt.set("feet-per-second",.3048),rt.set("mile-per-hour",.44704);const ft=180/Math.PI,H=5,mt=new J.J({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function gt(u,y){return rt.get(u)/rt.get(y)||1}function at(u){return(450-u)%360}function yt(u,y="geographic"){const[m,g]=u,A=Math.sqrt(m*m+g*g);let k=Math.atan2(g,m)*ft;return k=(360+k)%360,"geographic"===y&&(k=at(k)),[A,k]}function pt(u,y="geographic"){let m=u[1];"geographic"===y&&(m=at(m)),m%=360;const g=u[0];return[g*Math.cos(m/ft),g*Math.sin(m/ft)]}function lt(u,y,m,g="geographic"){if(!(0,dt.AB)(u)||null==m)return u;const A="vector-magdir"===y?u.clone():$(u,y),k=A.pixels[1];for(let R=0;R<k.length;R++)k[R]="geographic"===g?(k[R]+m[R]+270)%360:(k[R]+360-m[R])%360;return"vector-magdir"===y?A:$(A,"vector-magdir")}function $(u,y,m="geographic",g=1){if(!(0,dt.AB)(u))return u;const{pixels:A,width:k,height:R}=u,t=k*R,l=A[0],e=A[1],n=u.pixelType.startsWith("f")?u.pixelType:"f32",s=ct.A.createEmptyBand(n,t),i=ct.A.createEmptyBand(n,t);let o=0;for(let c=0;c<R;c++)for(let a=0;a<k;a++)"vector-uv"===y?([s[o],i[o]]=yt([l[o],e[o]],m),s[o]*=g):([s[o],i[o]]=pt([l[o],e[o]],m),s[o]*=g,i[o]*=g),o++;const r=new ct.A({pixelType:n,width:u.width,height:u.height,mask:u.mask,validPixelCount:u.validPixelCount,maskIsAlpha:u.maskIsAlpha,pixels:[s,i]});return r.updateStatistics(),r}function q(u,y,m=1){if(1===m||!(0,dt.AB)(u))return u;const g=u.clone(),{pixels:A,width:k,height:R}=g,t=A[0],l=A[1];let e=0;for(let n=0;n<R;n++)for(let s=0;s<k;s++)"vector-uv"===y?(t[e]*=m,l[e]*=m):t[e]*=m,e++;return g.updateStatistics(),g}function P(u,y,m,g,A){if(null==A||!A.spatialReference.equals(u.spatialReference))return{extent:u,width:Math.round(y/g),height:Math.round(m/g),resolution:u.width/y};const k=A.xmin,R=A.ymax,t=(u.xmax-u.xmin)/y*g,l=(u.ymax-u.ymin)/m*g,e=(t+l)/2;return u.xmin=k+Math.floor((u.xmin-k)/t)*t,u.xmax=k+Math.ceil((u.xmax-k)/t)*t,u.ymin=R+Math.floor((u.ymin-R)/l)*l,u.ymax=R+Math.ceil((u.ymax-R)/l)*l,{extent:u,width:Math.round(u.width/t),height:Math.round(u.height/l),resolution:e}}const U=j(0,0,0);function j(u=0,y=0,m=Math.PI,g=!0){g&&(m=(2*Math.PI-m)%(2*Math.PI));const A=g?-1:1,k=13*A,R=-7*A,t=-2*A,l=-16*A,e=21.75,[n,s]=O(0,y+k,m,e),[i,o]=O(u-5.5,y+R,m,e),[r,c]=O(u+5.5,y+R,m,e),[a,h]=O(u-1.5,y+t,m,e),[f,p]=O(u+1.5,y+t,m,e),[x,d]=O(u-1.5,y+l,m,e),[_,w]=O(u+1.5,y+l,m,e);return[n,s,i,o,a,h,f,p,r,c,x,d,_,w]}function G(u=0,y=Math.PI,m=!0){m&&(y=(2*Math.PI-y)%(2*Math.PI));const A=m?-1:1,k=5*A,R=20*A,t=25*A,l=45,o=2*A,r=m?1:-1,c=5*r;let[a,h]=[0+c,0-R],[f,p]=[a+2*r,h],[x,d]=[f-0*r,p+o],[_,w]=[0-c,0-t],[v,T]=[_+0*r,w-o],b=Math.ceil(u/H),B=Math.floor(b/10);b-=8*B;const I=[],N=[];for(let Q=0;Q<b/2;Q++,B--){B<=0&&b%2==1&&Q===(b-1)/2&&(_=0,v=_+0*r,w=(w+h)/2,T=w-o);const[ot,_t]=O(_,w,y,l);if(B>0){const[wt,Mt]=O(f,w,y,l),[At,kt]=O(a,h,y,l);I.push(wt),I.push(Mt),I.push(ot),I.push(_t),I.push(At),I.push(kt)}else{const[wt,Mt]=O(f,p,y,l),[At,kt]=O(x,d,y,l),[Pt,bt]=O(v,T,y,l);N.push(ot),N.push(_t),N.push(Pt),N.push(bt),N.push(At),N.push(kt),N.push(wt),N.push(Mt)}w+=k,h+=k,p+=k,d+=k,T+=k}const[z,Z]=O(0+c,0+R,y,l),Y=7*r,[X,nt]=O(0+Y,0+R,y,l),[K,st]=O(0+c,0-t,y,l),[ut,ht]=O(0+Y,0-t,y,l);return{pennants:I,barbs:N,shaft:[z,Z,X,nt,K,st,ut,ht]}}function O(u,y,m,g=1){const A=Math.sqrt(u*u+y*y)/g,k=(2*Math.PI+Math.atan2(y,u))%(2*Math.PI);return[A,(2*Math.PI+k-m)%(2*Math.PI)]}const F=[0,1,3,6,10,16,21,27,33,40,47,55,63],W=[0,.5,1,1.5,2],et=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function V(u,y,m,g){const A=gt(g||"knots",m);let k;for(k=1;k<y.length;k++)if(k===y.length-1){if(u<y[k]*A)break}else if(u<=y[k]*A)break;return Math.min(k-1,y.length-2)}function it(u,y,m,g,A){let k=0;switch(y){case"beaufort_kn":k=V(u,F,"knots",m);break;case"beaufort_km":k=V(u,F,"kilometer-per-hour",m);break;case"beaufort_ft":k=V(u,F,"feet-per-second",m);break;case"beaufort_m":k=V(u,F,"meter-per-second",m);break;case"classified_arrow":k=V(u,A??[],g,m);break;case"ocean_current_m":k=V(u,W,"meter-per-second",m);break;case"ocean_current_kn":k=V(u,et,"knots",m)}return k}const M=[];function E(u,y){let g=0,A=0;const{width:k,height:R,mask:t}=u,l=u.pixels[0],e=[],n=[],s=gt(mt.fromJSON(y.inputUnit),"knots"),i="wind_speed"===y.style?H:Number.MAX_VALUE;for(let o=0;o<R;o++)for(let r=0;r<k;r++){const c=l[o*k+r]*s;if((!t||t[o*k+r])&&c<i){for(let h=0;h<4;h++)e[g++]=(r+.5)/k,e[g++]=(o+.5)/R,e[g++]=h<2?-.5:.5,e[g++]=h%2==0?-.5:.5,e[g++]=0,e[g++]=c;const a=4*(g/24-1);n[A++]=a,n[A++]=a+1,n[A++]=a+2,n[A++]=a+1,n[A++]=a+2,n[A++]=a+3}}return{vertexData:new Float32Array(e),indexData:new Uint32Array(n)}}function L(u,y){return"simple_scalar"===y.style?E(u,y):"wind_speed"===y.style?function C(u,y){if(0===M.length)for(let o=0;o<30;o++)M.push(G(5*o,0,!y.invertDirection));const m=gt(mt.fromJSON(y.inputUnit),"knots"),{width:g,height:A,mask:k}=u,R=u.pixels[0],t=u.pixels[1],e=[],n=[];let s=0,i=0;for(let o=0;o<A;o++)for(let r=0;r<g;r++){const c=o*g+r,a=R[c]*m;if((!k||k[o*g+r])&&a>=H){const h=(t[c]+360)%360/180*Math.PI,{pennants:f,barbs:p,shaft:x}=M[Math.min(Math.floor(a/5),29)];if(f.length+p.length===0)continue;let d=e.length/6;const _=(r+.5)/g,w=(o+.5)/A;for(let v=0;v<f.length;v+=2)e[s++]=_,e[s++]=w,e[s++]=f[v],e[s++]=f[v+1]+h,e[s++]=0,e[s++]=a;for(let v=0;v<p.length;v+=2)e[s++]=_,e[s++]=w,e[s++]=p[v],e[s++]=p[v+1]+h,e[s++]=0,e[s++]=a;for(let v=0;v<x.length;v+=2)e[s++]=_,e[s++]=w,e[s++]=x[v],e[s++]=x[v+1]+h,e[s++]=0,e[s++]=a;for(let v=0;v<f.length/6;v++)n[i++]=d,n[i++]=d+1,n[i++]=d+2,d+=3;for(let v=0;v<p.length/8;v++)n[i++]=d,n[i++]=d+1,n[i++]=d+2,n[i++]=d+1,n[i++]=d+2,n[i++]=d+3,d+=4;n[i++]=d+0,n[i++]=d+1,n[i++]=d+2,n[i++]=d+1,n[i++]=d+3,n[i++]=d+2,d+=4}}return{vertexData:new Float32Array(e),indexData:new Uint32Array(n)}}(u,y):function S(u,y){const{style:m,inputUnit:g,outputUnit:A,breakValues:k}=y,R=mt.fromJSON(g),t=mt.fromJSON(A);let n=0,s=0;const{width:i,height:o,mask:r}=u,c=u.pixels[0],a=u.pixels[1],h=null!=r?r.filter(d=>d>0).length:i*o,f=new Float32Array(42*h),p=new Uint32Array(15*h),x=y.invertDirection?j(0,0,0,!1):U;for(let d=0;d<o;d++)for(let _=0;_<i;_++){const w=d*i+_;if(!r||r[d*i+_]){const v=(a[w]+360)%360/180*Math.PI,T=it(c[w],m,R,t,k);for(let B=0;B<x.length;B+=2)f[n++]=(_+.5)/i,f[n++]=(d+.5)/o,f[n++]=x[B],f[n++]=x[B+1]+v,f[n++]=T,f[n++]=c[w];const b=7*(n/42-1);p[s++]=b,p[s++]=b+1,p[s++]=b+2,p[s++]=b+0,p[s++]=b+4,p[s++]=b+3,p[s++]=b+0,p[s++]=b+2,p[s++]=b+3,p[s++]=b+2,p[s++]=b+5,p[s++]=b+3,p[s++]=b+5,p[s++]=b+6,p[s++]=b+3}}return{vertexData:f,indexData:p}}(u,y)}function D(u,y,m,g=[0,0],A=.5){const{width:k,height:R,mask:t}=u,[l,e]=u.pixels,[n,s]=g,i=Math.round((k-n)/m),o=Math.round((R-s)/m),r=i*o,c=new Float32Array(r),a=new Float32Array(r),h=new Uint8Array(r),f="vector-uv"===y;for(let x=0;x<o;x++)for(let d=0;d<i;d++){let _=0;const w=x*i+d,v=Math.max(0,x*m+s),T=Math.max(0,d*m+n),b=Math.min(R,v+m),B=Math.min(k,T+m);for(let I=v;I<b;I++)for(let N=T;N<B;N++){const z=I*k+N;if(!t||t[z]){_++;const Z=f?[l[z],e[z]]:[l[z],(360+e[z])%360],[Y,X]=f?Z:pt(Z);c[w]+=Y,a[w]+=X}}if(_>=(b-v)*(B-T)*(1-A)){h[w]=1;const[I,N]=yt([c[w]/_,a[w]/_]);c[w]=I,a[w]=N}else h[w]=0,c[w]=0,a[w]=0}const p=new ct.A({width:i,height:o,pixels:[c,a],mask:h});return p.updateStatistics(),p}},91551:(vt,xt,tt)=>{tt.d(xt,{CW:()=>pt,pH:()=>W});var J=tt(10467),ct=tt(3248),dt=tt(35150),rt=tt(69287),ft=tt(56492),H=tt(40707),mt=tt(28067),gt=tt(58701);const at=()=>dt.A.getLogger("esri.views.2d.engine.flow.dataUtils"),yt=10;function pt(S,M,C,E){return lt.apply(this,arguments)}function lt(){return(lt=(0,J.A)(function*(S,M,C,E){const L=performance.now(),D=function $(S,M){const C=function U(S,M,C,E){if(0===E)return S;const L=Math.round(3*E),D=new Array(2*L+1);let u=0;for(let g=-L;g<=L;g++){const A=Math.exp(-g*g/(E*E));D[g+L]=A,u+=A}for(let g=-L;g<=L;g++)D[g+L]/=u;const y=new Float32Array(S.length);for(let g=0;g<C;g++)for(let A=0;A<M;A++){let k=0,R=0;for(let t=-L;t<=L;t++){if(A+t<0||A+t>=M)continue;const l=D[t+L];k+=l*S[2*(g*M+(A+t))],R+=l*S[2*(g*M+(A+t))+1]}y[2*(g*M+A)]=k,y[2*(g*M+A)+1]=R}const m=new Float32Array(S.length);for(let g=0;g<M;g++)for(let A=0;A<C;A++){let k=0,R=0;for(let t=-L;t<=L;t++){if(A+t<0||A+t>=C)continue;const l=D[t+L];k+=l*y[2*((A+t)*M+g)],R+=l*y[2*((A+t)*M+g)+1]}m[2*(A*M+g)]=k,m[2*(A*M+g)+1]=R}return m}(M.data,M.width,M.height,S.smoothing);return S.interpolate?(E,L)=>{const D=Math.floor(E),u=Math.floor(L);if(D<0||D>=M.width)return[0,0];if(u<0||u>=M.height)return[0,0];const y=E-D,m=L-u,k=D<M.width-1?D+1:D,R=u<M.height-1?u+1:u;return[(C[2*(u*M.width+D)]*(1-m)+C[2*(R*M.width+D)]*m)*(1-y)+(C[2*(u*M.width+k)]*(1-m)+C[2*(R*M.width+k)]*m)*y,(C[2*(u*M.width+D)+1]*(1-m)+C[2*(R*M.width+D)+1]*m)*(1-y)+(C[2*(u*M.width+k)+1]*(1-m)+C[2*(R*M.width+k)+1]*m)*y]}:(E,L)=>{const D=Math.round(E),u=Math.round(L);return D<0||D>=M.width||u<0||u>=M.height?[0,0]:[C[2*(u*M.width+D)],C[2*(u*M.width+D)+1]]}}(M,C),u=performance.now(),y=function P(S,M,C,E){const L=[],D=new H.A,u=1/Math.max(S.lineCollisionWidth,1),y=Math.round(C*u),m=Math.round(E*u),g=new Int32Array(y*m);for(let k=0;k<g.length;k++)g[k]=-1;const A=[];for(let k=0;k<E;k+=S.lineSpacing)for(let R=0;R<C;R+=S.lineSpacing)A.push({x:R,y:k,sort:D.getFloat()});A.sort((k,R)=>k.sort-R.sort);for(const{x:k,y:R}of A)if(D.getFloat()<S.density){const t=q(S,M,k,R,L.length,g,y,m,u);if(t.length<2)continue;L.push(t)}return L}(M,D,C.width,C.height),m=performance.now(),g=function j(S,M){const C=new H.A,E=S.reduce((m,g)=>m+g.length,0),L=new Float32Array(4*E),D=new Array(S.length);let u=0,y=0;for(const m of S){const g=u;for(const A of m)L[4*u]=A.x,L[4*u+1]=A.y,L[4*u+2]=A.t,L[4*u+3]=A.speed,u++;D[y++]={startVertex:g,numberOfVertices:m.length,totalTime:m[m.length-1].t,timeSeed:M?C.getFloat():0}}return{lineVertices:L,lineDescriptors:D}}(y,!0),A=performance.now(),k="Streamlines"===S?function G(S,M){const{lineVertices:E,lineDescriptors:L}=S;let D=0,u=0;for(const t of L)D+=2*t.numberOfVertices,u+=6*(t.numberOfVertices-1);const y=new Float32Array(9*D),m=new Uint32Array(u);let g=0,A=0;function R(t,l,e,n,s,i,o,r){const c=9*g;let a=0;y[c+a++]=t,y[c+a++]=l,y[c+a++]=1,y[c+a++]=e,y[c+a++]=i,y[c+a++]=o,y[c+a++]=n/2,y[c+a++]=s/2,y[c+a++]=r,g++,y[c+a++]=t,y[c+a++]=l,y[c+a++]=-1,y[c+a++]=e,y[c+a++]=i,y[c+a++]=o,y[c+a++]=-n/2,y[c+a++]=-s/2,y[c+a++]=r,g++}for(const t of L){const{totalTime:l,timeSeed:e}=t;let n=null,s=null,i=null,o=null,r=null,c=null;for(let a=0;a<t.numberOfVertices;a++){const h=E[4*(t.startVertex+a)],f=E[4*(t.startVertex+a)+1],p=E[4*(t.startVertex+a)+2],x=E[4*(t.startVertex+a)+3];let d=null,_=null,w=null,v=null;if(a>0){d=h-n,_=f-s;const T=Math.sqrt(d*d+_*_);if(d/=T,_/=T,a>1){let b=d+r,B=_+c;const I=Math.sqrt(b*b+B*B);b/=I,B/=I;const N=Math.min(1/(b*d+B*_),M);b*=N,B*=N,w=-B,v=b}else w=-_,v=d;null!==w&&null!==v&&(R(n,s,i,w,v,l,e,x),m[A++]=g-2,m[A++]=g,m[A++]=g-1,m[A++]=g,m[A++]=g+1,m[A++]=g-1)}n=h,s=f,i=p,r=d,c=_,o=x}R(n,s,i,-c,r,l,e,o)}return{vertexData:y,indexData:m}}(g,yt):function O(S){const{lineVertices:L,lineDescriptors:D}=S;let u=0,y=0;for(const T of D){const b=T.numberOfVertices-1;u+=4*b*2,y+=6*b*2}const m=new Float32Array(16*u),g=new Uint32Array(y);let A,k,R,t,l,e,n,s,i,o,r,c,a,h,f=0,p=0;function _(T,b){let B=i+r,I=o+c;const N=Math.sqrt(B*B+I*I);B/=N,I/=N;const z=i*B+o*I;B/=z,I/=z;let Z=r+a,Y=c+h;const X=Math.sqrt(Z*Z+Y*Y);Z/=X,Y/=X;const nt=r*Z+c*Y;Z/=nt,Y/=nt,function d(T,b,B,I,N,z,Z,Y,X,nt,K,st,ut,ht){const Q=16*f;let ot=0;for(const _t of[1,2])for(const wt of[1,2,3,4])m[Q+ot++]=T,m[Q+ot++]=b,m[Q+ot++]=B,m[Q+ot++]=I,m[Q+ot++]=Z,m[Q+ot++]=Y,m[Q+ot++]=X,m[Q+ot++]=nt,m[Q+ot++]=_t,m[Q+ot++]=wt,m[Q+ot++]=ut,m[Q+ot++]=ht,m[Q+ot++]=N/2,m[Q+ot++]=z/2,m[Q+ot++]=K/2,m[Q+ot++]=st/2,f++}(A,k,R,t,-I,B,l,e,n,s,-Y,Z,T,b),function x(){g[p++]=f-8,g[p++]=f-7,g[p++]=f-6,g[p++]=f-7,g[p++]=f-5,g[p++]=f-6,g[p++]=f-4,g[p++]=f-3,g[p++]=f-2,g[p++]=f-3,g[p++]=f-1,g[p++]=f-2}()}function w(T,b,B,I,N,z){if(i=r,o=c,r=a,c=h,null==i&&null==o&&(i=r,o=c),null!=l&&null!=e){a=T-l,h=b-e;const Z=Math.sqrt(a*a+h*h);a/=Z,h/=Z}null!=i&&null!=o&&_(N,z),A=l,k=e,R=n,t=s,l=T,e=b,n=B,s=I}function v(T,b){i=r,o=c,r=a,c=h,null==i&&null==o&&(i=r,o=c),null!=i&&null!=o&&_(T,b)}for(const T of D){A=null,k=null,R=null,t=null,l=null,e=null,n=null,s=null,i=null,o=null,r=null,c=null,a=null,h=null;const{totalTime:b,timeSeed:B}=T;for(let I=0;I<T.numberOfVertices;I++)w(L[4*(T.startVertex+I)],L[4*(T.startVertex+I)+1],L[4*(T.startVertex+I)+2],L[4*(T.startVertex+I)+3],b,B);v(b,B)}return{vertexData:m,indexData:g}}(g),R=performance.now();return(0,ct.A)("esri-2d-profiler")&&(at().info("I.1","_createFlowFieldFromData (ms)",Math.round(u-L)),at().info("I.2","_getStreamlines (ms)",Math.round(m-u)),at().info("I.3","createAnimatedLinesData (ms)",Math.round(A-m)),at().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(R-A)),at().info("I.5","createFlowMesh (ms)",Math.round(R-L)),at().info("I.6","Mesh size (bytes)",k.vertexData.buffer.byteLength+k.indexData.buffer.byteLength)),yield Promise.resolve(),(0,ft.Te)(E),k})).apply(this,arguments)}function q(S,M,C,E,L,D,u,y,m){const g=[];let A=C,k=E,R=0,[t,l]=M(A,k);t*=S.velocityScale,l*=S.velocityScale;const e=Math.sqrt(t*t+l*l);let n,s;g.push({x:A,y:k,t:R,speed:e});for(let i=0;i<S.verticesPerLine;i++){let[o,r]=M(A,k);o*=S.velocityScale,r*=S.velocityScale;const c=Math.sqrt(o*o+r*r);if(c<S.minSpeedThreshold)return g;const a=o/c,h=r/c;if(A+=a*S.segmentLength,k+=h*S.segmentLength,R+=S.segmentLength/c,Math.acos(a*n+h*s)>S.maxTurnAngle)return g;if(S.collisions){const f=Math.round(A*m),p=Math.round(k*m);if(f<0||f>u-1||p<0||p>y-1)return g;const x=D[p*u+f];if(-1!==x&&x!==L)return g;D[p*u+f]=L}g.push({x:A,y:k,t:R,speed:c}),n=a,s=h}return g}function F(S,M){const C=M.pixels,{width:E,height:L}=M,D=new Float32Array(E*L*2),u=M.mask||new Uint8Array(E*L*2);if(M.mask||u.fill(255),"vector-uv"===S)for(let y=0;y<E*L;y++)D[2*y]=C[0][y],D[2*y+1]=-C[1][y];else if("vector-magdir"===S)for(let y=0;y<E*L;y++){const m=C[0][y],g=(0,rt.kU)(C[1][y]),A=Math.cos(g-Math.PI/2),k=Math.sin(g-Math.PI/2);D[2*y]=A*m,D[2*y+1]=k*m}return{data:D,mask:u,width:E,height:L}}function W(S,M,C,E,L,D){return et.apply(this,arguments)}function et(){return(et=(0,J.A)(function*(S,M,C,E,L,D){const u=performance.now(),y=(0,gt.Vp)(M.spatialReference);if(!y){const r=yield V(S,M,C,E,L,D);return(0,ct.A)("esri-2d-profiler")&&at().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-u)),(0,ct.A)("esri-2d-profiler")&&at().info("I.9","Number of parts",1),r}const[m,g]=y.valid,k=Math.ceil(M.width/(g-m)),R=M.width/k,t=Math.round(C/k);let l=M.xmin;const e=[],n=performance.now();for(let r=0;r<k;r++){const c=new mt.A({xmin:l,xmax:l+R,ymin:M.ymin,ymax:M.ymax,spatialReference:M.spatialReference});e.push(V(S,c,t,E,L,D)),l+=R}const s=yield Promise.all(e);(0,ct.A)("esri-2d-profiler")&&at().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-n)),(0,ct.A)("esri-2d-profiler")&&at().info("I.9","Number of parts",s.length);const i={data:new Float32Array(C*E*2),mask:new Uint8Array(C*E),width:C,height:E};let o=0;for(const r of s){for(let c=0;c<r.height;c++)for(let a=0;a<r.width;a++)o+a>=C||(i.data[2*(c*C+o+a)]=r.data[2*(c*r.width+a)],i.data[2*(c*C+o+a)+1]=r.data[2*(c*r.width+a)+1],i.mask[c*C+o+a]=r.mask[c*r.width+a]);o+=r.width}return(0,ct.A)("esri-2d-profiler")&&at().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-u)),i})).apply(this,arguments)}function V(S,M,C,E,L,D){return it.apply(this,arguments)}function it(){return(it=(0,J.A)(function*(S,M,C,E,L,D){const u={requestProjectedLocalDirections:!0,signal:D};if(null!=L&&(u.timeExtent=L),"imagery"===S.type){yield S.load({signal:D});const g=S.rasterInfo.dataType,A=yield S.fetchImage(M,C,E,u);return null==A?.pixelData?.pixelBlock?{data:new Float32Array(C*E*2),mask:new Uint8Array(C*E),width:C,height:E}:F(g,A.pixelData.pixelBlock)}yield S.load({signal:D});const y=S.serviceRasterInfo.dataType,m=yield S.fetchPixels(M,C,E,u);return null==m?.pixelBlock?{data:new Float32Array(C*E*2),mask:new Uint8Array(C*E),width:C,height:E}:F(y,m.pixelBlock)})).apply(this,arguments)}}}]);