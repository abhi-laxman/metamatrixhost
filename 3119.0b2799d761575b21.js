"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[3119],{83119:(c,h,s)=>{s.r(h),s.d(h,{default:()=>u});var l=s(8189),d=(s(35150),s(3248),s(40707),s(5922),s(76576)),v=s(88219),w=s(31178),o=s(5605),a=s(48900),r=s(85211),g=s(41474);let t=class extends g.A{constructor(i){super(i),this.type="group",this.layerViews=new w.A}destroy(){this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.addHandles([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),(0,a.wB)(()=>this.layer?.visibilityMode,()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},a.OH),(0,a.wB)(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},a.OH)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}get creatingLayerViews(){return this.view?.layerViewManager?.isCreatingLayerViewsForLayer(this.layer)??!1}set layerViews(i){this._set("layerViews",(0,o.V)(i,this._get("layerViews")))}get updatingProgress(){return 0===this.layerViews.length?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.creatingLayerViews||this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>!!this._findLayerViewForLayer(e)?.visible);return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){null==i&&null==(i=this._firstVisibleOnLayerOrder())&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.removeHandles("grouplayerview:visible"),this.addHandles(this.layerViews.map(y=>(0,a.wB)(()=>y.visible,V=>this._applyVisibility(()=>{V!==this.visible&&(y.visible=this.visible)},()=>this._applyExclusiveVisibility(V?y:null)),a.OH)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e?.visible?e:null))}_applyVisibility(i,e){this._hasLayerViewVisibleOverrides()&&("inherited"===this.layer?.visibilityMode?i():"exclusive"===this.layer?.visibilityMode&&e())}};(0,l._)([(0,r.MZ)({readOnly:!0})],t.prototype,"creatingLayerViews",null),(0,l._)([(0,r.MZ)({cast:o.H})],t.prototype,"layerViews",null),(0,l._)([(0,r.MZ)({readOnly:!0})],t.prototype,"updatingProgress",null),(0,l._)([(0,r.MZ)()],t.prototype,"view",void 0),t=(0,l._)([(0,d.$)("esri.views.layers.GroupLayerView")],t);const p=t;let n=class extends((0,v.e)(p)){attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(i){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((i,e)=>this.container.addChildAt(i.container,e))}};n=(0,l._)([(0,d.$)("esri.views.2d.layers.GroupLayerView2D")],n);const u=n}}]);