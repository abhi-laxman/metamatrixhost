"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[4204],{94204:(x,f,e)=>{e.r(f),e.d(f,{default:()=>E});var s=e(8189),V=e(31178),$=e(35150),w=(e(3248),e(40707),e(5922),e(76576)),U=e(88219),F=e(10467),C=e(17715),A=e(56492),v=e(63484),i=e(85211);const o=Symbol(),H=y=>{let a=class extends y{constructor(){var t;super(...arguments),t=this,this.layerViews=new V.A,this._debouncedUpdate=(0,A.sg)((0,F.A)(function*(){const{layer:n,parent:h}=t,d=h?.footprintLayerView;let u=[];const p=t._createQuery();if(p&&d){const{features:L}=yield d.queryFeatures(p);t.suspended||(u=L.map(l=>n.acquireLayer(l)))}t.removeHandles(o),t.addHandles(u,o)}))}get creatingLayerViews(){return this.view?.layerViewManager.isCreatingLayerViewsForLayer(this.layer)??!1}isUpdating(){return this.creatingLayerViews||this.layer.updating||this.layerViews.some(t=>t.updating)}enableLayerUpdates(){return(0,C.vE)([this._updatingHandles.addWhen(()=>!1===this.parent?.footprintLayerView?.dataUpdating,()=>this.updateLayers()),this._updatingHandles.add(()=>[this.layer.maximumVisibleSublayers,this.layer.parent?.orderBy,this.parent?.footprintLayerView?.filter,this.parent?.footprintLayerView?.timeExtent,this.suspended],()=>this.updateLayers()),(0,C.hA)(()=>this.removeHandles(o))])}updateLayers(){this.suspended?this.removeHandles(o):this._updatingHandles.addPromise((0,A.QZ)(this._debouncedUpdate()).catch(t=>{$.A.getLogger(this).error(t)}))}_createQuery(){const t=this.parent?.footprintLayerView,n=this.layer?.parent;if(!t||!n||n.destroyed)return null;const{layer:{maximumVisibleSublayers:h},view:{scale:d}}=this;if(!h)return null;const{itemTypeField:u,itemSourceField:p,itemNameField:L,minScaleField:l,maxScaleField:S,objectIdField:M,orderBy:O}=n,T=(0,v.mA)(`${l} IS NULL OR ${d} <= ${l} OR ${l} = 0`,`${S} IS NULL OR ${d} >= ${S}`),m=O?.find(c=>c.field&&!c.valueExpression),r=t.createQuery();if(r.returnGeometry=!1,r.num=h,r.outFields=[M,p,L],r.where=(0,v.mA)(r.where,T),null!=this.unsupportedItemTypes){const c=`${u} NOT IN (${this.unsupportedItemTypes.map(Z=>`'${Z}'`)})`;r.where=(0,v.mA)(r.where,c)}return m?.field&&(r.orderByFields=[`${m.field} ${"descending"===m.order?"DESC":"ASC"}`],r.outFields.push(m.field)),r}};return(0,s._)([(0,i.MZ)({readOnly:!0})],a.prototype,"creatingLayerViews",null),(0,s._)([(0,i.MZ)()],a.prototype,"layer",void 0),(0,s._)([(0,i.MZ)()],a.prototype,"layerViews",void 0),(0,s._)([(0,i.MZ)({readOnly:!0})],a.prototype,"unsupportedItemTypes",void 0),(0,s._)([(0,i.MZ)()],a.prototype,"parent",void 0),(0,s._)([(0,i.MZ)({readOnly:!0})],a.prototype,"isUpdating",null),a=(0,s._)([(0,w.$)("esri.views.layers.CatalogDynamicGroupLayerView")],a),a};var I=e(41474);let g=class extends(H((0,U.e)(I.A))){constructor(){super(...arguments),this.unsupportedItemTypes=["Scene Service"],this.layerViews=new V.A}attach(){this.addAttachHandles([this.layerViews.on("after-changes",()=>this._updateStageChildren()),this.enableLayerUpdates()])}detach(){this.container.removeAllChildren()}update(y){this.updateLayers()}viewChange(){}moveEnd(){this.requestUpdate()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((y,a)=>this.container.addChildAt(y.container,a))}};g=(0,s._)([(0,w.$)("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],g);const E=g}}]);