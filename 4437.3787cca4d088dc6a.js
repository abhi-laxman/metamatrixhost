"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[4437],{67571:(M,T,n)=>{n.d(T,{O:()=>g});class g{constructor(){this._outer=new Map}clear(){this._outer.clear()}get empty(){return 0===this._outer.size}get(h,s){return this._outer.get(h)?.get(s)}getInner(h){return this._outer.get(h)}set(h,s,a){const _=this._outer.get(h);_?_.set(s,a):this._outer.set(h,new Map([[s,a]]))}delete(h,s){const a=this._outer.get(h);a&&(a.delete(s),0===a.size&&this._outer.delete(h))}forEach(h){this._outer.forEach((s,a)=>h(s,a))}forAll(h){for(const s of this._outer.values())for(const a of s.values())h(a)}}},11445:(M,T,n)=>{n.d(T,{Qf:()=>o,Qh:()=>a,RS:()=>h,ez:()=>p,i5:()=>D,lM:()=>s,qK:()=>l});var g=n(79139);const h=16;function s(c){if(!c)return 0;let E=l;for(const m in c)c.hasOwnProperty(m)&&(E+=e(c[m],!1));return E}function a(c){if(!c)return 0;if("number"==typeof c[0])return o(c);if(Array.isArray(c))return function _(c){const E=c.length;if(0===E||"number"==typeof c[0])return d(c,8);let m=p;for(let O=0;O<E;O++)m+=e(c[O]);return m}(c);let E=l;for(const m in c)c.hasOwnProperty(m)&&(E+=e(c[m]));return E}function e(c,E=!0){switch(typeof c){case"object":return E?a(c):l;case"string":return function b(c){return 32+c.length}(c);case"number":return h;case"boolean":return 4;default:return 8}}function o(...c){return c.reduce((E,m)=>E+(m?(0,g.iu)(m)?m.byteLength+D:Array.isArray(m)?d(m,h):0:0),0)}function d(c,E){return p+c.length*E}const l=32,p=16,D=145},67361:(M,T,n)=>{n.r(T),n.d(T,{BufferObject:()=>g.g,FramebufferObject:()=>b.H,Program:()=>h.B,ProgramCache:()=>s.J,Renderbuffer:()=>a.l,ShaderCompiler:()=>_.Z,Texture:()=>e.g,VertexArrayObject:()=>o.Z,createProgram:()=>l.r,glslifyDefineMap:()=>d.I});var g=n(32788),b=n(79061),h=n(23063),s=n(93987),a=n(17107),_=n(87805),e=n(76169),o=n(45513),d=n(37488),l=n(80831)},79061:(M,T,n)=>{n.d(T,{H:()=>D});var g=n(10467),h=(n(3248),n(35150)),s=n(11432),a=n(32788),_=n(77440),e=n(50915),o=n(68165),d=n(17107),l=n(76169);class D{constructor(t,r,i=null){this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(e.vt.FramebufferObject,this);const u=c(r)?r:new l.g(this._context,r);if(this._colorAttachments.set(e.Nm.COLOR_ATTACHMENT0,u),this._validateTextureDescriptor(u.descriptor),this._validateColorAttachmentPoint(e.Nm.COLOR_ATTACHMENT0),null!=i)if(function m(f){return c(f)||null!=f&&"pixelFormat"in f}(i))this._depthStencilTexture=c(i)?i:new l.g(this._context,i),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const A=function E(f){return null!=f&&"type"in f&&f.type===o.p.RenderBuffer}(i)?i:new d.l(this._context,i);this._depthStencilBuffer=A,this._validateRenderBufferDescriptor(A.descriptor)}}dispose(){if(0===this._colorAttachments.size&&!this._glName)return;const t=this._context.getBoundFramebufferObject();this._colorAttachments.forEach((r,i)=>this.detachColorTexture(i)?.dispose()),this.detachDepthStencilBuffer()?.dispose(),this.detachDepthStencilTexture()?.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(e.vt.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(e.Nm.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){return this._colorAttachments.get(e.Nm.COLOR_ATTACHMENT0)?.descriptor?.width??0}get height(){return this._colorAttachments.get(e.Nm.COLOR_ATTACHMENT0)?.descriptor?.height??0}get usedMemory(){return[...this._colorAttachments].reduce((t,[r,i])=>t+i.usedMemory,this.depthStencil?.usedMemory??0)}getColorTexture(t){const r=this._colorAttachments.get(t);return r&&c(r)?r:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(t,r=e.Nm.COLOR_ATTACHMENT0){t&&(this._validateColorAttachmentPoint(r),this._validateTextureDescriptor(t.descriptor),this.detachColorTexture(r)?.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,r)),this._colorAttachments.set(r,t))}detachColorTexture(t=e.Nm.COLOR_ATTACHMENT0){const r=this._colorAttachments.get(t);if(r){if(this._initialized){const i=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t),this._context.bindFramebuffer(i)}return this._colorAttachments.delete(t),r}}setColorTextureTarget(t,r=e.Nm.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(r);i&&this._framebufferTexture2D(i.glName,r,t)}attachDepthStencil(t){if(t)switch(t.type){case o.p.Texture:return this._attachDepthStencilTexture(t);case o.p.RenderBuffer:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){if(null==t)return;const r=t.descriptor;r.pixelFormat!==e.Ab.DEPTH_STENCIL&&r.pixelFormat!==e.Ab.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),r.dataType!==e.ld.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._validateTextureDescriptor(r),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e.nI)),this._depthStencilTexture?.dispose(),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;if(t&&this._initialized){const r=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,e.nI),this._context.bindFramebuffer(r)}return this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(null==t)return;const r=t.descriptor;if(this._validateRenderBufferDescriptor(r),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const i=this._context.gl,u=this._getGLAttachmentPoint(r);i.framebufferRenderbuffer(e.R.FRAMEBUFFER,u,i.RENDERBUFFER,t.glName)}this._depthStencilBuffer=t}detachDepthStencilBuffer(){const t=this._depthStencilBuffer;if(t&&this._initialized){const r=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this);const i=this._context.gl,u=this._getGLAttachmentPoint(t.descriptor);i.framebufferRenderbuffer(e.R.FRAMEBUFFER,u,i.RENDERBUFFER,null),this._context.bindFramebuffer(r)}return this._depthStencilBuffer=null,t}copyToTexture(t,r,i,u,A,P,R){(t<0||r<0||A<0||P<0)&&console.error("Offsets cannot be negative!"),(i<=0||u<=0)&&console.error("Copy width and height must be greater than zero!");const x=R.descriptor;R.descriptor.target!==e.Ap.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==x?.width||null==x?.height||t+i>this.width||r+u>this.height||A+i>x.width||P+u>x.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const C=this._context,B=C.bindTexture(R,l.g.TEXTURE_UNIT_FOR_UPDATES);C.setActiveTexture(l.g.TEXTURE_UNIT_FOR_UPDATES),C.bindFramebuffer(this),C.gl.copyTexSubImage2D(e.Ap.TEXTURE_2D,0,A,P,t,r,i,u),C.bindTexture(B,l.g.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,r,i,u,A,P,R){(i<=0||u<=0)&&console.error("Copy width and height must be greater than zero!"),R||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,r,i,u,A,P,R)}readPixelsAsync(t,r,i,u,A,P,R){var x=this;return(0,g.A)(function*(){const{gl:C}=x._context,B=a.g.createPixelPack(x._context,e._U.STREAM_READ,R.byteLength);x._context.bindBuffer(B);const N=x._context.getBoundFramebufferObject();x._context.bindFramebuffer(x),C.readPixels(t,r,i,u,A,P,0),x._context.unbindBuffer(e.NZ.PIXEL_PACK_BUFFER),x._context.bindFramebuffer(N),yield B.getSubDataAsync(R),B.dispose()})()}resize(t,r){if(this.width===t&&this.height===r)return;const i={width:t,height:r};O(i,this._context.parameters.maxTextureSize),this._colorAttachments.forEach(u=>u.resize(i.width,i.height)),this._depthStencilTexture?.resize(i.width,i.height),this._initialized&&(O(i,this._context.parameters.maxRenderbufferSize),this._depthStencilBuffer?.resize(i.width,i.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(t=e.R.FRAMEBUFFER){const r=this._context.gl;if(this._initialized)return void r.bindFramebuffer(t,this.glName);this._glName&&r.deleteFramebuffer(this._glName);const i=r.createFramebuffer();if(r.bindFramebuffer(t,i),this._colorAttachments.forEach((u,A)=>this._framebufferTexture2D(u.glName,A,F(u),t)),this._depthStencilBuffer){const u=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);r.framebufferRenderbuffer(t,u,r.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,r.DEPTH_STENCIL_ATTACHMENT,F(this._depthStencilTexture),t);(0,_.en)()&&r.checkFramebufferStatus(t)!==r.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=i,this._initialized=!0}_framebufferTexture2D(t,r=e.Nm.COLOR_ATTACHMENT0,i=e.Ap.TEXTURE_2D,u=e.R.FRAMEBUFFER,A=0){this._context.gl.framebufferTexture2D(u,r,i,t,A)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const r=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(e.R.FRAMEBUFFER,r,t.RENDERBUFFER,null)}this._depthStencilBuffer=(0,s.WD)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,s.WD)(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==e.Ap.TEXTURE_2D&&t.target!==e.Ap.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),O(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderBufferDescriptor(t){O(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&(this.width===t.width&&this.height===t.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(t){switch(t.internalFormat){case e.yQ.DEPTH_COMPONENT16:case e.yQ.DEPTH_COMPONENT24:case e.yQ.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case e.yQ.DEPTH24_STENCIL8:case e.yQ.DEPTH32F_STENCIL8:case e.yQ.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case e.yQ.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(t){if(-1===D._MAX_COLOR_ATTACHMENTS){const{gl:i}=this._context;D._MAX_COLOR_ATTACHMENTS=i.getParameter(i.MAX_COLOR_ATTACHMENTS)}const r=t-e.Nm.COLOR_ATTACHMENT0;r+1>D._MAX_COLOR_ATTACHMENTS&&h.A.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${r+1}. Implementation supports up to ${D._MAX_COLOR_ATTACHMENTS} color attachments`)}}function c(f){return null!=f&&"type"in f&&f.type===o.p.Texture}function O(f,t){const r=Math.max(f.width,f.height);if(r>t){h.A.getLogger("esri.views.webgl.FramebufferObject").warn(`Resizing FBO attachment size ${f.width}x${f.height} to device limit ${t}`);const i=t/r;return f.width=Math.round(f.width*i),f.height=Math.round(f.height*i),!1}return!0}function F(f){return f.descriptor.target===e.Ap.TEXTURE_CUBE_MAP?e.Ap.TEXTURE_CUBE_MAP_POSITIVE_X:e.Ap.TEXTURE_2D}D._MAX_COLOR_ATTACHMENTS=-1},93987:(M,T,n)=>{n.d(T,{J:()=>s}),n(3248);var b=n(67571),h=n(23063);class s{constructor(_){this._rctx=_,this._store=new b.O}dispose(){this._store.forAll(_=>_.dispose()),this._store.clear()}acquire(_,e,o,d){const l=this._store.get(_,e);if(null!=l)return l.ref(),l;const p=new h.B(this._rctx,_,e,o,d);return p.ref(),this._store.set(_,e,p),p}get test(){}}},17107:(M,T,n)=>{n.d(T,{l:()=>s});var g=n(50915),b=n(68165),h=n(49950);class s{constructor(_,e){this._context=_,this._descriptor=e,this.type=b.p.RenderBuffer,this._context.instanceCounter.increment(g.vt.Renderbuffer,this);const o=this._context.gl;this.glName=o.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:d,height:l,internalFormat:p,multisampled:D}=e;D?o.renderbufferStorageMultisample(o.RENDERBUFFER,this.samples,p,d,l):o.renderbufferStorage(o.RENDERBUFFER,p,d,l),this._context.bindRenderbuffer(null)}get descriptor(){return this._descriptor}get samples(){const _=this._descriptor.samples,e=this._context.parameters.maxSamples;return _?Math.min(_,e):e}get usedMemory(){return(0,h.e)(this._descriptor)}resize(_,e){const o=this._descriptor;if(o.width===_&&o.height===e)return;o.width=_,o.height=e;const d=this._context.gl;this._context.bindRenderbuffer(this),o.multisampled?d.renderbufferStorageMultisample(d.RENDERBUFFER,this.samples,o.internalFormat,o.width,o.height):d.renderbufferStorage(d.RENDERBUFFER,o.internalFormat,o.width,o.height),this._context.bindRenderbuffer(null)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(g.vt.Renderbuffer,this),this._context=null)}}},49950:(M,T,n)=>{n.d(T,{e:()=>h,q:()=>b});var g=n(84757);class b{constructor(a,_,e=_){this.internalFormat=a,this.width=_,this.height=e,this.multisampled=!1,this.samples=1}}function h(s){return s.width<=0||s.height<=0||null==s.internalFormat?0:s.width*s.height*(0,g.IB)(s.internalFormat)}},37488:(M,T,n)=>{function g(h){const{options:s,value:a}=h;return"number"==typeof s[a]}function b(h){let s="";for(const a in h){const _=h[a];if("boolean"==typeof _)_&&(s+=`#define ${a}\n`);else if("number"==typeof _)s+=`#define ${a} ${_.toFixed()}\n`;else if("object"==typeof _)if(g(_)){const{value:e,options:o,namespace:d}=_,l=d?`${d}_`:"";for(const p in o)s+=`#define ${l}${p} ${o[p].toFixed()}\n`;s+=`#define ${a} ${l}${e}\n`}else{const e=_.options;let o=0;for(const d in e)s+=`#define ${e[d]} ${(o++).toFixed()}\n`;s+=`#define ${a} ${e[_.value]}\n`}}return s}n.d(T,{I:()=>b})}}]);