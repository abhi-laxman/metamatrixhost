"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[6041,3723],{93723:(T,_,d)=>{d.r(_),d.d(_,{hydratedAdapter:()=>o});var E=d(28067),a=d(21870),r=d(1749),G=d(55861),i=d(93615);const o={convertToGEGeometry:function M(c,n){if(null==n)return null;let u="cache"in n?n.cache._geVersion:void 0;return null==u&&(u=c.convertJSONToGeometry(n),"cache"in n&&(n.cache._geVersion=u)),u},exportPoint:function P(c,n,u){const l=c.hasZ(n),g=c.hasM(n),h=new r.A({x:c.getPointX(n),y:c.getPointY(n),spatialReference:u});return l&&(h.z=c.getPointZ(n)),g&&(h.m=c.getPointM(n)),h.cache._geVersion=n,h},exportPolygon:function m(c,n,u){const l=new G.A({rings:c.exportPaths(n),hasZ:c.hasZ(n),hasM:c.hasM(n),spatialReference:u});return l.cache._geVersion=n,l},exportPolyline:function x(c,n,u){const l=new i.A({paths:c.exportPaths(n),hasZ:c.hasZ(n),hasM:c.hasM(n),spatialReference:u});return l.cache._geVersion=n,l},exportMultipoint:function R(c,n,u){const l=new a.A({hasZ:c.hasZ(n),hasM:c.hasM(n),points:c.exportPoints(n),spatialReference:u});return l.cache._geVersion=n,l},exportExtent:function D(c,n,u){const l=c.hasZ(n),g=c.hasM(n),h=new E.A({xmin:c.getXMin(n),ymin:c.getYMin(n),xmax:c.getXMax(n),ymax:c.getYMax(n),spatialReference:u});if(l){const p=c.getZExtent(n);h.zmin=p.vmin,h.zmax=p.vmax}if(g){const p=c.getMExtent(n);h.mmin=p.vmin,h.mmax=p.vmax}return h.cache._geVersion=n,h}}},46041:(T,_,d)=>{d.r(_),d.d(_,{buffer:()=>W,changeDefaultSpatialReferenceTolerance:()=>ee,clearDefaultSpatialReferenceTolerance:()=>te,clip:()=>P,contains:()=>x,convexHull:()=>S,crosses:()=>R,cut:()=>m,densify:()=>Y,difference:()=>B,disjoint:()=>g,distance:()=>D,equals:()=>c,extendedSpatialReferenceInfo:()=>M,flipHorizontal:()=>J,flipVertical:()=>N,generalize:()=>X,geodesicArea:()=>k,geodesicBuffer:()=>K,geodesicDensify:()=>F,geodesicLength:()=>b,intersect:()=>V,intersectLinesToPoints:()=>q,intersects:()=>n,isSimple:()=>C,nearestCoordinate:()=>Z,nearestVertex:()=>U,nearestVertices:()=>z,offset:()=>w,overlaps:()=>h,planarArea:()=>Q,planarLength:()=>$,relate:()=>p,rotate:()=>H,simplify:()=>L,symmetricDifference:()=>I,touches:()=>u,union:()=>j,within:()=>l});var E=d(55739),a=d(29020),r=d(53930),G=d(32034),i=d(93723);function o(e){const t=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return t?(0,E.PZ)(G.A,t):G.A.WGS84}function M(e){return r.G.extendedSpatialReferenceInfo(e)}function P(e,t){return(0,a.f)(e),r.G.clip(i.hydratedAdapter,o(e),e,t)}function m(e,t){return(0,a.f)(e),r.G.cut(i.hydratedAdapter,o(e),e,t)}function x(e,t){return(0,a.f)(e),(0,a.f)(t),r.G.contains(i.hydratedAdapter,o(e),e,t)}function R(e,t){return(0,a.f)(e),(0,a.f)(t),r.G.crosses(i.hydratedAdapter,o(e),e,t)}function D(e,t,f){return(0,a.f)(e),(0,a.f)(t),r.G.distance(i.hydratedAdapter,o(e),e,t,f)}function c(e,t){return(0,a.f)(e),(0,a.f)(t),r.G.equals(i.hydratedAdapter,o(e),e,t)}function n(e,t){return(0,a.f)(e),(0,a.f)(t),r.G.intersects(i.hydratedAdapter,o(e),e,t)}function u(e,t){return(0,a.f)(e),(0,a.f)(t),r.G.touches(i.hydratedAdapter,o(e),e,t)}function l(e,t){return(0,a.f)(e),(0,a.f)(t),r.G.within(i.hydratedAdapter,o(e),e,t)}function g(e,t){return(0,a.f)(e),(0,a.f)(t),r.G.disjoint(i.hydratedAdapter,o(e),e,t)}function h(e,t){return(0,a.f)(e),(0,a.f)(t),r.G.overlaps(i.hydratedAdapter,o(e),e,t)}function p(e,t,f){return(0,a.f)(e),(0,a.f)(t),r.G.relate(i.hydratedAdapter,o(e),e,t,f)}function C(e){return(0,a.f)(e),r.G.isSimple(i.hydratedAdapter,o(e),e)}function L(e){return(0,a.f)(e),r.G.simplify(i.hydratedAdapter,o(e),e)}function S(e,t=!1){return r.G.convexHull(i.hydratedAdapter,o(e),e,t)}function B(e,t){return(0,a.f)(t),r.G.difference(i.hydratedAdapter,o(e),e,t)}function I(e,t){return(0,a.f)(t),r.G.symmetricDifference(i.hydratedAdapter,o(e),e,t)}function V(e,t){return(0,a.f)(t),r.G.intersect(i.hydratedAdapter,o(e),e,t)}function j(e){return r.G.union(i.hydratedAdapter,o(e),e)}function w(e,t,f,s,y,v){return r.G.offset(i.hydratedAdapter,o(e),e,t,f,s,y,v)}function W(e,t,f,s=!1){return r.G.buffer(i.hydratedAdapter,o(e),e,t,f,s)}function K(e,t,f,s,y,v){return r.G.geodesicBuffer(i.hydratedAdapter,o(e),e,t,f,s,y,v)}function Z(e,t,f=!0){return(0,a.f)(e),r.G.nearestCoordinate(i.hydratedAdapter,o(e),e,t,f)}function U(e,t){return(0,a.f)(e),r.G.nearestVertex(i.hydratedAdapter,o(e),e,t)}function z(e,t,f,s){return(0,a.f)(e),r.G.nearestVertices(i.hydratedAdapter,o(e),e,t,f,s)}function O(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent?.center??null:null}function H(e,t,f){if(null==e)throw new A;const s=e.spatialReference;if(null==(f=f??O(e)))throw new A;const y=e.constructor.fromJSON(r.G.rotate(e,t,f));return y.spatialReference=s,y}function J(e,t){if(null==e)throw new A;const f=e.spatialReference;if(null==(t=t??O(e)))throw new A;const s=e.constructor.fromJSON(r.G.flipHorizontal(e,t));return s.spatialReference=f,s}function N(e,t){if(null==e)throw new A;const f=e.spatialReference;if(null==(t=t??O(e)))throw new A;const s=e.constructor.fromJSON(r.G.flipVertical(e,t));return s.spatialReference=f,s}function X(e,t,f,s){return(0,a.f)(e),r.G.generalize(i.hydratedAdapter,o(e),e,t,f,s)}function Y(e,t,f){return(0,a.f)(e),r.G.densify(i.hydratedAdapter,o(e),e,t,f)}function F(e,t,f,s=0){return(0,a.f)(e),r.G.geodesicDensify(i.hydratedAdapter,o(e),e,t,f,s)}function Q(e,t){return(0,a.f)(e),r.G.planarArea(i.hydratedAdapter,o(e),e,t)}function $(e,t){return(0,a.f)(e),r.G.planarLength(i.hydratedAdapter,o(e),e,t)}function k(e,t,f){return(0,a.f)(e),r.G.geodesicArea(i.hydratedAdapter,o(e),e,t,f)}function b(e,t,f){return(0,a.f)(e),r.G.geodesicLength(i.hydratedAdapter,o(e),e,t,f)}function q(e,t){return r.G.intersectLinesToPoints(i.hydratedAdapter,o(e),e,t)}function ee(e,t){r.G.changeDefaultSpatialReferenceTolerance(e,t)}function te(e){r.G.clearDefaultSpatialReferenceTolerance(e)}class A extends Error{constructor(){super("Illegal Argument Exception")}}}}]);