"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[7191],{40856:(H,L,s)=>{s.d(L,{X_:()=>W,i1:()=>S,oW:()=>v,zx:()=>G});var R=s(69287),d=s(82663);const h=96;function W(i,_){const P=_||i.extent,g=i.width,E=(0,d.GA)(P?.spatialReference);return P&&g?P.width/g*E*d.dy*h:0}function S(i,_){return i/((0,d.GA)(_)*d.dy*h)}function G(i,_,P){return function m(i,_){return 0===_||(0,R.Sp)(i,_)||i<_}(i,_)&&function y(i,_){return 0===_||(0,R.Sp)(i,_)||i>_}(i,P)}function v(i,_){return(0,R.Sp)(i,_)?0:(i||Number.POSITIVE_INFINITY)>(_||Number.POSITIVE_INFINITY)?1:-1}},97191:(H,L,s)=>{s.r(L),s.d(L,{GridSnappingEngine:()=>c});var R=s(10467),d=s(8189),h=s(98877),W=s(35150),S=s(69287),F=s(82663),u=s(85211),m=(s(3248),s(40707),s(76576)),y=s(28714),v=s(13970),i=s(77098),_=s(40856),P=s(83278),g=s(34390),E=s(29280),J=s(3548),Q=s(87246),N=s(27279);let c=class extends h.A{constructor(e){super(e),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){return this.grid?.rotateWithMap?0:(0,S.kU)(this.view.rotation??0)}get gridRotation(){return(0,S.kU)(this.grid?.rotation??0)}get gridCenter(){const{spatialReference:e,grid:o}=this;if(!o||!e||!(0,v.isLoadedOrLoadFor)(o.center.spatialReference,e))return null;try{const n=(0,v.project)(o.center,e),l=e.isWrappable&&null!=this.view?.center?(0,i.O7)(n.x,this.view.center.x,e):n.x;return(0,E.vt)(l,n.y,n.z)}catch(n){return W.A.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",n),null}}get offsetScaleFactor(){const{pixelsPerStride:e,grid:o}=this;if(!o||!e)return 1;const{majorLineInterval:n,dynamicScaling:l}=o;return n<1?null:(0,g.Ge)(n,e,l)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:e}=this;return e?(0,F.oU)(e.spacing,e.units,"meters"):null}get viewMetersPerPixel(){const{viewMetersPerSRUnit:e}=this;return null==e?null:e*(0,_.i1)(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){const{spatialReference:e}=this.view;return this.gridCenter?(0,g.WT)(this.gridCenter[0],this.gridCenter[1],e):null}get pixelsPerStride(){const{gridMetersPerStride:e,viewMetersPerPixel:o}=this;return o&&e?e/o:null}get updating(){return null!=this.grid&&null!=this.spatialReference&&null==this.viewMetersPerSRUnit}fetchCandidates(e,o,n){var l=this;return(0,R.A)(function*(){const{options:a,view:p}=l;if(!a?.effectiveGridEnabled||!p.grid||n.feature?.attributes&&J.io in n.feature.attributes)return[];const M=n.coordinateHelper.arrayToPoint(e);return l.fetchCandidatesSync(M,a.distance*("touch"===n.pointer?a.touchSensitivityMultiplier:1))})()}fetchCandidatesSync(e,o){const n=[],{grid:l,effectiveViewRotation:a,gridRotation:p,gridCenter:M,viewMetersPerPixel:f,viewMetersPerSRUnit:U,offsetScaleFactor:A,spatialReference:I,gridMetersPerStride:V,pixelsPerStride:Y}=this;if(!(l&&f&&U&&M&&I&&A&&V&&Y)||!l.dynamicScaling&&Y<P.b||!(0,v.isLoadedOrLoadFor)(e.spatialReference,I))return n;const B=(0,v.project)(e,I),q=(0,E.vt)(B.x,B.y,B.z),O=C(q,-p,M,-a),K=V/U*A,D=b(O,K,M),{shouldSnapX:j,shouldSnapY:T}=k(D,O,o,f,U);if(!j&&!T)return[];const tt=(0,E.vt)((j?D:O)[0],(T?D:O)[1]),x=C(tt,p,M,a),X=C(D,p,M,a);if(T){const w=z(D,O,K,"y"),Z=C(w,p,M,a);n.push(new N.o({lineStart:X,lineEnd:Z,targetPoint:x,isDraped:!1}))}if(j){const w=z(D,O,K,"x"),Z=C(w,p,M,a);n.push(new N.o({lineStart:X,lineEnd:Z,targetPoint:x,isDraped:!1}))}return j&&T&&n.push(new Q.N(x,n[0],n[1],!1)),n}};(0,d._)([(0,u.MZ)({constructOnly:!0})],c.prototype,"view",void 0),(0,d._)([(0,u.MZ)()],c.prototype,"options",void 0),(0,d._)([(0,u.MZ)()],c.prototype,"grid",null),(0,d._)([(0,u.MZ)()],c.prototype,"effectiveViewRotation",null),(0,d._)([(0,u.MZ)()],c.prototype,"gridRotation",null),(0,d._)([(0,u.MZ)()],c.prototype,"gridCenter",null),(0,d._)([(0,u.MZ)()],c.prototype,"offsetScaleFactor",null),(0,d._)([(0,u.MZ)()],c.prototype,"spatialReference",null),(0,d._)([(0,u.MZ)()],c.prototype,"gridMetersPerStride",null),(0,d._)([(0,u.MZ)()],c.prototype,"viewMetersPerPixel",null),(0,d._)([(0,u.MZ)()],c.prototype,"viewMetersPerSRUnit",null),(0,d._)([(0,u.MZ)()],c.prototype,"pixelsPerStride",null),(0,d._)([(0,u.MZ)()],c.prototype,"updating",null),c=(0,d._)([(0,m.$)("esri.views.interactive.snapping.GridSnappingEngine")],c);const C=(e,o,n,l)=>{const a=(0,E.Hh)(e[0],e[1],e[2]);return(0,y.L)(a,(0,y.L)(a,a,n,o),n,l)},b=(e,o,n)=>{const l=(e[0]-n[0])/o,a=(e[1]-n[1])/o,p=Math.trunc(l),M=Math.trunc(a),f=Math.round(l%1),U=Math.round(a%1);return(0,E.vt)(n[0]+(p+f)*o,n[1]+(M+U)*o)},k=(e,o,n,l,a)=>{if(l<=0)return{shouldSnapX:!1,shouldSnapY:!1};const M=(e[1]-o[1])/l;return{shouldSnapX:Math.abs((e[0]-o[0])/l*a)<n,shouldSnapY:Math.abs(M*a)<n}},z=(e,o,n,l)=>"y"===l?(0,E.vt)(e[0]+n*(o[0]>e[0]?1:-1),e[1]):(0,E.vt)(e[0],e[1]+n*(o[1]>e[1]?1:-1))}}]);