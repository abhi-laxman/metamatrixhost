"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[819,1469],{44719:(v,d,r)=>{r.r(d),r.d(d,{OperatorGeodeticLength:()=>M});var g=r(8189),i=r(62257),y=r(80775),E=r(95944),s=r(33165),c=r(3037),C=r(9279);class M{getOperatorType(){return 10311}supportsCurves(){return!0}accelerateGeometry(t,n,h){return!1}canAccelerateGeometry(t){return!1}execute(t,n,h,l){if(4===h)return(new y.O).execute(t,n,l);if(0===n.getCoordinateSystemType()&&(0,i.t)(""),(0,i.d)(t),t.isEmpty()||t.getDimension()<1)return 0;const _=n.getGCS(),o=(0,c.G)();_.querySpheroidData(o);const u=o.majorSemiAxis,G=o.e2,P=_.getUnit().getUnitToBaseFactor();let e;const a=t.getGeometryType();if(a===i.G.enumPolygon?e=t.getBoundary():a===i.G.enumEnvelope?e=(0,E.c)(t):(0,i.f)(a)?(e=new E.P({vd:t.getDescription()}),e.addSegment(t,!0)):e=t,e.hasNonLinearSegments()&&(e=(new C.O).execute(e,0,n.getTolerance(0),0,l)),_!==n){const m=n.getSRToGCSTransform();if(n.isPannable()){e=(0,c.w)(e,n),a===i.G.enumPolyline&&e===t&&(e=t.clone());const f=new s.E;n.getPannableExtent().queryIntervalX(f);for(let D=0,S=e.getPointCount();D<S;D++){const O=e.getXY(D);O.x=(0,c._)(O.x,f),e.setXY(D,O)}}const x=e.createInstance();e=(0,c.$)(m,e,x,l)?x:(new c.v).execute(e,m,l)}return this._ExecuteMultiPathGeodeticLength(e,h,u,G,P)}_ExecuteMultiPathGeodeticLength(t,n,h,l,_){const o={stack:[],error:void 0,hasError:!1};try{const u=(0,g.b)(o,new c.E,!1);let G=0;const P=t.querySegmentIterator();for(;P.nextPath();)for(;P.hasNextSegment();){const e=P.nextSegment(),a=e.getStartXY(),m=e.getEndXY();a.scale(_),m.scale(_),c.F.geodeticDistance(h,l,a.x,a.y,m.x,m.y,u,null,null,n),G+=u.val}return G}catch(u){o.error=u,o.hasError=!0}finally{(0,g.c)(o)}}}},1469:(v,d,r)=>{r.d(d,{G:()=>g,S:()=>y});class g{*[Symbol.iterator](){let s=this.next();for(;s;)yield s,s=this.next()}}class y extends g{constructor(s){super(),this.m_iGeom=-1,this.m_aGeoms=s?s.slice():[]}next(){if(this.m_iGeom<this.m_aGeoms.length-1){const s=this.m_aGeoms[++this.m_iGeom];return this.m_aGeoms[this.m_iGeom]=null,s}return null}tock(){return!1}getGeometryID(){return this.m_iGeom}getRank(){return 1}}}}]);