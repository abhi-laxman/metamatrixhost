"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[1587],{51587:(U,S,t)=>{t.r(S),t.d(S,{invokeGeometryOp:()=>A});var y=t(10467),f=t(61320);function d(n,o){let l;return{loaded:!1,load:()=>l??=o().then(s=>{g[n]={loaded:!0,execute:s}})}}function x(n){return null==n?null:n.toJSON()}const g={disjoint:d("disjoint",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2350)]).then(t.bind(t,35626)).then(n=>n.execute)),intersects:d("intersects",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(7184)]).then(t.bind(t,87764)).then(n=>n.execute)),touches:d("touches",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(7415)]).then(t.bind(t,25083)).then(n=>n.execute)),crosses:d("crosses",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(1332)]).then(t.bind(t,83240)).then(n=>n.execute)),within:d("within",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(1841)]).then(t.bind(t,82085)).then(n=>n.execute)),contains:d("contains",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(5451)]).then(t.bind(t,82503)).then(n=>n.execute)),overlaps:d("overlaps",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(4870)]).then(t.bind(t,54114)).then(n=>n.execute)),equals:d("equals",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(4252)]).then(t.bind(t,45552));return(o,l)=>n.execute((0,f.rS)(o),(0,f.rS)(l))})),relate:d("relate",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(256)]).then(t.bind(t,7852));return(o,l,s)=>n.execute((0,f.rS)(o),(0,f.rS)(l),s)})),intersection:d("intersection",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(8331)]).then(t.bind(t,20527)).then(n=>n.execute)),union:d("union",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(1839)]).then(t.bind(t,37139)).then(n=>n.executeMany)),difference:d("difference",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(9114)]).then(t.bind(t,59646));return(o,l)=>x(n.execute((0,f.rS)(o),(0,f.rS)(l)))})),symmetricDifference:d("symmetricDifference",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(1973)]).then(t.bind(t,99377));return(o,l)=>x(n.execute((0,f.rS)(o),(0,f.rS)(l)))})),clip:d("clip",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(7483)]).then(t.bind(t,90991));return(o,l)=>x(n.execute((0,f.rS)(o),(0,f.rS)(l)))})),cut:d("cut",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(7285)]).then(t.bind(t,1977));return(o,l)=>n.execute((0,f.rS)(o),(0,f.rS)(l)).map(s=>x(s))})),area:d("area",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(2564)]).then(t.bind(t,84040)),{convertFromSpatialReferenceUnit:o,toAreaUnit:l}=yield t.e(9324).then(t.bind(t,79324));return(s,h)=>{const m=n.execute((0,f.rS)(s));return o(s.spatialReference,l(h),m)}})),geodeticArea:d("geodeticArea",(0,y.A)(function*(){const n=yield Promise.all([t.e(2076),t.e(4354)]).then(t.bind(t,84354)),{convert:o,squareMeters:l,toAreaUnit:s}=yield t.e(9324).then(t.bind(t,79324));return yield n.load(),(h,m)=>{const P=n.execute((0,f.rS)(h));return o(l,s(m),P)}})),length:d("length",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(8146)]).then(t.bind(t,78422)),{convertFromSpatialReferenceUnit:o,toLengthUnit:l}=yield t.e(9324).then(t.bind(t,79324));return(s,h)=>{const m=n.execute(s);return o(s.spatialReference,l(h),m)}})),geodeticLength:d("geodeticLength",(0,y.A)(function*(){const n=yield Promise.all([t.e(2076),t.e(6155)]).then(t.bind(t,26155)),{convert:o,meters:l,toLengthUnit:s}=yield t.e(9324).then(t.bind(t,79324));return yield n.load(),(h,m)=>{const P=n.execute((0,f.rS)(h));return o(l,s(m),P)}})),distance:d("distance",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(2498)]).then(t.bind(t,42830)),{convertFromSpatialReferenceUnit:o,toLengthUnit:l}=yield t.e(9324).then(t.bind(t,79324));return(s,h,m)=>{const P=n.execute((0,f.rS)(s),(0,f.rS)(h));return o(s.spatialReference,l(m),P)}})),densify:d("densify",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(2055)]).then(t.bind(t,62107)),{convertToSpatialReferenceUnit:o,toLengthUnit:l}=yield t.e(9324).then(t.bind(t,79324));return(s,h,m)=>(h=o(l(m),s.spatialReference,h),x(n.execute((0,f.rS)(s),h)))})),geodeticDensify:d("geodeticDensify",(0,y.A)(function*(){const n=yield Promise.all([t.e(2076),t.e(8925)]).then(t.bind(t,55489)),{convert:o,meters:l,toLengthUnit:s}=yield t.e(9324).then(t.bind(t,79324));return yield n.load(),(h,m,P)=>(m=o(s(P),l,m),x(n.execute((0,f.rS)(h),m)))})),generalize:d("generalize",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(6097)]).then(t.bind(t,94319)),{convertToSpatialReferenceUnit:o,toLengthUnit:l}=yield t.e(9324).then(t.bind(t,79324));return(s,h,m,P)=>(h=o(l(m),s.spatialReference,h),x(n.execute((0,f.rS)(s),h,P)))})),buffer:d("buffer",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(579),t.e(1680)]).then(t.bind(t,61680)),{convertToSpatialReferenceUnit:o,toLengthUnit:l}=yield t.e(9324).then(t.bind(t,79324));return(s,h,m)=>(h=o(l(m),s.spatialReference,h),n.execute(s,h))})),geodesicBuffer:d("geodesicBuffer",(0,y.A)(function*(){const n=yield Promise.all([t.e(2076),t.e(6771)]).then(t.bind(t,52839)),{convert:o,meters:l,toLengthUnit:s}=yield t.e(9324).then(t.bind(t,79324));return yield n.load(),(h,m,P)=>(m=o(s(P),l,m),n.execute(h,m))})),offset:d("offset",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(2321)]).then(t.bind(t,30229)),{convertToSpatialReferenceUnit:o,toLengthUnit:l}=yield t.e(9324).then(t.bind(t,79324));return(s,h,m,P)=>(h=o(l(m),s.spatialReference,h),n.execute(s,h,P))})),rotate:d("rotate",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(9361)]).then(t.bind(t,36073)),{default:o}=yield Promise.all([t.e(3558),t.e(2076)]).then(t.bind(t,79580));return(l,s,h,m)=>{const P=(new o).rotate(s,h,m);return x(n.execute((0,f.rS)(l),P))}})),centroid:d("centroid",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(5818)]).then(t.bind(t,82645));return o=>x(n.execute((0,f.rS)(o)))})),labelPoint:d("labelPoint",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(9961),t.e(5201)]).then(t.bind(t,98717));return o=>x(n.execute((0,f.rS)(o)))})),simplify:d("simplify",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(1937)]).then(t.bind(t,44085)).then(n=>n.execute)),isSimple:d("isSimple",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(1937)]).then(t.bind(t,44085)).then(n=>n.isSimple)),convexHull:d("convexHull",()=>Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(8542)]).then(t.bind(t,56786)).then(n=>n.execute)),getNearestCoordinate:d("getNearestCoordinate",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(36)]).then(t.bind(t,4416));return(o,l,s)=>{const h=n.getNearestCoordinate((0,f.rS)(o),(0,f.rS)(l),s);return{...h,coordinate:x(h.coordinate)}}})),getNearestVertex:d("getNearestVertex",(0,y.A)(function*(){const n=yield Promise.all([t.e(3558),t.e(3037),t.e(4931),t.e(2076),t.e(36)]).then(t.bind(t,4416));return(o,l)=>{const s=n.getNearestVertex((0,f.rS)(o),(0,f.rS)(l));return{...s,coordinate:x(s.coordinate)}}}))};function A(n,o){const l=g[n];return l.loaded?l.execute.apply(void 0,o):l.load().then(()=>A(n,o))}}}]);