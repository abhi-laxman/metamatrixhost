"use strict";(self.webpackChunkAngularClient=self.webpackChunkAngularClient||[]).push([[5124],{65124:(Zt,H,h)=>{h.r(H),h.d(H,{default:()=>Ht});var B=h(10467),c=h(8189),I=h(81098),K=h(89447),O=h(31178),$=h(5922),Y=h(42425),N=h(35150),_=h(11432),f=h(48900),v=h(85211),R=(h(3248),h(40707),h(76576)),E=h(1749),X=h(93615),G=h(15268),J=h(36819),S=h(46602),W=h(23191),j=h(11911),Q=h(94137),q=h(772),tt=h(82862),et=h(4398),it=h(17715),w=h(81142),st=h(67685),b=h(64015),ot=h(16552),rt=h(41980),nt=h(90941),at=h(89381);let M=class extends at.w{constructor(t){super(t),this.type="translate-vertex",this.distance=w.r7,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=w.r7,this.elevation=null,this.area=null,this.totalLength=null}};(0,c._)([(0,v.MZ)()],M.prototype,"type",void 0),(0,c._)([(0,v.MZ)()],M.prototype,"distance",void 0),(0,c._)([(0,v.MZ)()],M.prototype,"elevation",void 0),(0,c._)([(0,v.MZ)()],M.prototype,"area",void 0),(0,c._)([(0,v.MZ)()],M.prototype,"totalLength",void 0),M=(0,c._)([(0,R.$)("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],M);var Z=h(84177),A=h(69441),ht=h(25566);function pt(t,e){function i(){const o=e(),n=o.sketchOptions.tooltips.effectiveEnabled?o.activeTooltipInfo:null;return{...o,activeTooltipInfo:n}}let s=!1;function r(o){s||(s=!0,o(),s=!1)}return(0,it.vE)([(0,f.wB)(()=>{const o=i();return{context:o,geometry:o.graphic?.geometry,vertexGeometry:o.selectedVertex?.geometry}},({context:o})=>{r(()=>{(function ct(t){const e=t.activeTooltipInfo;if(e){switch(e?.type){case"move-point":return function dt(t,{graphic:e}){L(t,e,e?.geometry)}(e,t);case"selected-vertex":return function vt(t,{graphic:e,selectedVertex:i}){L(t,e,i?.geometry);const s=e?.geometry;switch(s?.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=(0,Z.n)(s);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=(0,A.ob)(s),t.area.visible=!1}}(e,t)}e.sketchOptions=t.sketchOptions}})(o),t.info=o.activeTooltipInfo})},f.pc),(0,f.wB)(()=>{const o=i(),{activeTooltipInfo:n}=o;if(n&&"key"in n)return{context:o,key:n.key}},(o,n)=>{o&&n&&o.key!==n.key&&r(()=>U(o.context))},f.OH),(0,b.sZ)(t,{onBeforePaste:()=>{s=!0},onAfterPaste:()=>{U(i()),s=!1}})])}function L(t,e,i){e&&"point"===i?.type&&(t.setLocationFromPoint(i),t.elevation.actual=(0,ht.Of)(i),t.elevation.visible=!!e.geometry?.hasZ,t.elevation.readOnly=!1,t.elevation.showAsZ=!0)}function U(t){function e(o,n){const a=n?.geometry;if(!a||"point"!==a.type)return;const{dx:d,dy:l,dz:p}=(0,b.mu)(o,a);if(0===d&&0===l&&0===p)return;const{x:m,y:g,z:x,m:V,spatialReference:T}=a,C=new E.A({x:m+d,y:g+l,z:null!=x?x+p:void 0,m:V,spatialReference:T});t.updateGeometry(n,C,a,d,l)}const{activeTooltipInfo:i,graphic:s,selectedVertex:r}=t;switch(i?.type){case"move-point":return e(i,s);case"selected-vertex":return e(i,r)}}function k(t,e,i){if(!i)return;const{x:s,y:r}=i.origin,o=e.toMap(i),n=e.toMap((0,st.tc)(s,r)),a=(0,A.Kt)(n,o);t.distance=a??w.r7}var gt=h(56565),ut=h(19824),ft=h(5216),xt=h(46153),Gt=h(63938),z=h(56023),Mt=h(86478);class Vt{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-start"}}class _t{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape"}}class St{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-stop"}}class Et{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-start"}}class Tt{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move"}}class bt{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-stop"}}class It{constructor(e){this.added=e,this.type="vertex-select"}}class Ot{constructor(e){this.removed=e,this.type="vertex-deselect"}}class wt{constructor(e,i,s,r){this.added=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-add"}}class At{constructor(e,i,s,r){this.removed=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-remove"}}const u=gt.W.reshapeGraphics,Ct={vertices:{default:new S.A({style:"circle",size:u.vertex.size,color:u.vertex.color,outline:{color:u.vertex.outlineColor,width:1}}),hover:new S.A({style:"circle",size:u.vertex.hoverSize,color:u.vertex.hoverColor,outline:{color:u.vertex.hoverOutlineColor,width:1}}),selected:new S.A({style:"circle",size:u.selected.size,color:u.selected.color,outline:{color:u.selected.outlineColor,width:1}})},midpoints:{default:new S.A({style:"circle",size:u.midpoint.size,color:u.midpoint.color,outline:{color:u.midpoint.outlineColor,width:1}}),hover:new S.A({style:"circle",size:u.midpoint.size,color:u.midpoint.color,outline:{color:u.midpoint.outlineColor,width:1}})}};let y=class extends Y.A.EventedAccessor{constructor(t){super(t),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.layer=null,this.midpointGraphics=new O.A,this.midpointSymbol=new S.A({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new O.A,this.snappingManager=null,this.symbols=Ct,this.sketchOptions=new z.A,this.type="reshape",this.vertexGraphics=new O.A,this.view=null}initialize(){const t=this.view;this._highlightHelper=new tt.A({view:t}),this._setup(),this._updateHandlesOnExternalGeometryChange=(0,f.C1)(()=>this.graphic?.geometry,e=>{if(!e)return;const i=new Set(this.selectedVertices.map(l=>l.attributes?.pointIndex));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter(l=>i.has(l.attributes.pointIndex)).forEach(l=>this._addToSelection(l));const{enableMovement:s,_mover:r,graphic:o,midpointGraphics:n,vertexGraphics:a}=this,d=a.concat(n).items;s&&d.push(o),r?.set("graphics",d)},f.OH),this.tooltip=(0,b.A)(()=>({view:t,options:this.sketchOptions.tooltips})),this.tooltipInfos=function lt(t){const e={sketchOptions:t,viewType:"2d"};return{movePoint:new ot.F(e),selectedVertex:new rt.d(e),translateGraphic:new nt.M(e),translateVertices:new M(e)}}(this.sketchOptions),this.addHandles([(0,f.z7)(()=>t?.ready,()=>{const{layer:e,view:i}=this;(0,et.Y)(i,e),this.addHandles(i.on("key-down",s=>this._keyDownHandler(s),ut.o.TOOL))},{once:!0,initial:!0}),(0,f.wB)(()=>this.graphic,()=>this.refresh()),(0,f.wB)(()=>this.layer,(e,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()}),(0,f.wB)(()=>this.enableMidpoints,()=>this.refresh()),pt(this.tooltip,()=>this._tooltipsContext),(0,f.wB)(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),f.Vh),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this.tooltip=(0,_.pR)(this.tooltip)}get _coordinateHelper(){return this._editGeometryOperations?.data.coordinateHelper??(0,ft.BV)(!!this.graphic.geometry?.hasZ,!!this.graphic.geometry?.hasM,this.view.spatialReference)}get _selectedVertex(){return 1===this.selectedVertices.length?this.selectedVertices.at(0):void 0}get _tooltipsContext(){return{sketchOptions:this.sketchOptions,activeTooltipInfo:this.activeTooltipInfo,graphic:this.graphic,selectedVertex:this._selectedVertex,updateGeometry:(t,e,i,s,r)=>{this._setUpGeometryHelper();const o=t===this.graphic;if(o?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(t),this._syncGeometryAfterVertexMove(t,e,s,r,!0),o){const{view:a}=this,d=a.toScreen(i),l=a.toScreen(e),p=(l?.x??0)-(d?.x??0),m=(l?.y??0)-(d?.y??0);this._emitMoveEvent(p,m),this._emitMoveStopEvent(p,m)}else this._emitReshapeEvent(t),this._emitReshapeStopEvent(t);this._editGeometryOperations=(0,_.pR)(this._editGeometryOperations)}}}set highlightsEnabled(t){this._highlightHelper?.removeAll(),this._set("highlightsEnabled",t),this._setUpHighlights()}get state(){const t=this.view.ready;return t&&this.graphic&&this.layer?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:t}=this;t.length&&this._removeVertices(t)}_setup(){const{graphic:t,layer:e}=this;if(!e||null==t?.geometry)return;const i=t.geometry;"mesh"!==i.type&&"extent"!==i.type?("polygon"===i.type&&(0,G.uC)(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic)}_setUpGeometryHelper(){const t=this.graphic.geometry;if(null==t||"mesh"===t.type||"extent"===t.type)return void this._logGeometryTypeError();const e="multipoint"===t.type?new X.A({paths:[t.points],spatialReference:t.spatialReference}):t;this._editGeometryOperations=Gt.p.fromGeometry(e,W.RT.Local)}_saveSnappingContextForHandle(t,e){this._snappingGraphicsLayer=new J.A({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;(0,_.Lw)(i),this._snappingContext=new Mt.e({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:e.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new j.J(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){null!=this.snappingManager&&this.snappingManager.doneSnapping(),null!=this._snappingGraphicsLayer&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=(0,_.pR)(this._editGeometryOperations),this._snappingTask=(0,_.DC)(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach(i=>i.destroy()),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach(i=>i.destroy()),this.vertexGraphics.removeAll()}_setupGraphics(){const t=this.graphic.geometry;if(null!=t&&("polyline"===t.type||"polygon"===t.type)){const e=P(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:e,symbols:i}=this,s=[];return t?.forEach((r,o)=>{r.forEach((n,a)=>{s.push(new I.A({geometry:this._coordinateHelper.arrayToPoint(n),symbol:i?.vertices?.default,attributes:{...e,pathIndex:o,pointIndex:a}}))})}),s}_createMidpointGraphics(t){const{_graphicAttributes:e,symbols:i}=this,s=[];for(let r=0;r<t.length;r++){const o=t[r];for(let n=0;n<o.length;n++){const a=(n+1)%o.length;if("polyline"===this.graphic.geometry?.type&&0===a)continue;const p=this._getMidpoint(o[n],o[a]);s.push(new I.A({geometry:p,symbol:i.midpoints.default,attributes:{...e,pathIndex:r,pointIndexStart:n,pointIndexEnd:a}}))}}return s}_updateSymbolsForTheme(){const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:this.symbols.vertices.hover?.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const e of this.vertexGraphics)e.symbol=this._isSelected(e)?this.symbols.vertices.selected:this._hoverGraphic===e?this.symbols.vertices.hover:this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map(({geometry:i})=>({x:i.x,y:i.y}));for(let i=0;i<e.length;i++){const s=[];for(let r=0;r<e.length;r++){if(i===r)continue;const o=e[i],n=e[r];o.x===n.x&&o.y===n.y&&s.push(r)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:s,view:r}=this,o=s.concat(i).items;t&&o.push(e),this._mover=new q.default({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:o,view:r,callbacks:{onGraphicClick:n=>this._onGraphicClickCallback(n),onGraphicMoveStart:n=>this._onGraphicMoveStartCallback(n),onGraphicMove:n=>this._onGraphicMoveCallback(n),onGraphicMoveStop:n=>this._onGraphicMoveStopCallback(n),onGraphicPointerOver:n=>this._onGraphicPointerOverCallback(n),onGraphicPointerOut:n=>this._onGraphicPointerOutCallback(n)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick?.(t);else if(this._isMidpoint(e)){if(2===t.viewEvent.button)return;const i=this.graphic.clone(),s=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,s)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),2===t.viewEvent.button?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:s}=t,r=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:r?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:s}=t;if(s===this.graphic){const{geometry:r}=s;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),void(null!=r&&"point"===r.type&&this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)}))}if(!this.selectedVertices.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const r=this.graphic.clone(),o=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],r,o)}this._addToSelection(s)}this._setUpOperation(t),this._emitReshapeStartEvent(s),this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(s,t.viewEvent),this._emitReshapeEvent(s)})}_onGraphicMoveCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t;e.totalDx+=i,e.totalDy+=s;const{operationType:o}=e,{geometry:n}=r;if(null!=n)if("move"!==o)this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(r,t.viewEvent),this._emitReshapeEvent(r)});else if("point"===n.type)this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)});else if("polyline"===n.type||"polygon"===n.type){const a=P(n);this._updateVertexGraphicLocations(a),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}}_onGraphicMoveStopCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t,{operationType:o}=e;e.totalDx+=i,e.totalDy+=s,this._onHandleMove(r,i,s,t,()=>"move"===o?this._emitMoveStopEvent():this._emitReshapeStopEvent(r)),this._isMidpoint(r)?this.refresh():(this._updateTooltip(this._isVertex(r)?r:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const{_coordinateHelper:e}=this;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:r}=i.attributes;i.geometry=e.arrayToPoint(t[s][r])}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:r}=e.attributes,o=t[i];e.geometry=this._getMidpoint(o[s],o[r])}}_getMidpoint(t,e){const{_coordinateHelper:i}=this,s=i.arrayToVector(t),r=i.arrayToVector(e),o=i.toXYZ(s),n=i.toXYZ(r),[a,d,l]=(0,G.t9)(o,n),p=i.hasM()?0:void 0;return new E.A({x:a,y:d,z:l,m:p,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(t){const[e,i]=D(t);return(0,_.Lw)(this._editGeometryOperations),this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,i,s,r){var o=this;(0,_.DC)(this._snappingTask);const n=this._snappingContext;if(!n)return;const a=t.geometry,d="graphic-move-stop"===s.type;if(null!=this.snappingManager&&this.selectedVertices.length<2&&!d){const l=this.snappingManager;this._stagedVertex=l.update({point:a,context:n}),this._syncGeometryAfterVertexMove(t,new E.A(this._stagedVertex),e,i,d),r(),this._snappingTask=(0,K.UT)(function(){var p=(0,B.A)(function*(m){const g=yield l.snap({point:a,context:n,signal:m});g.valid&&(o._stagedVertex=g.apply(),o._syncGeometryAfterVertexMove(t,new E.A(o._stagedVertex),e,i,d),r())});return function(m){return p.apply(this,arguments)}}())}else{const l=null!=this._stagedVertex?new E.A(this._stagedVertex):a;this._syncGeometryAfterVertexMove(t,l,e,i,d),r()}}_syncGeometryAfterVertexMove(t,e,i,s,r=!1){const o=this._editGeometryOperations?.data.geometry;if(o)if("point"===o.type)t.geometry=e;else if("mesh"===o.type)t.geometry=o.centerAt(e);else{const{_coordinateHelper:n}=this,[a,d]=D(t);let l=(0,G.$K)(o);const p=l[a].length-1,m=n.pointToArray(e);l[a][d]=m,"polygon"===o.type&&(0===d?l[a][p]=m:d===p&&(l[a][0]=m)),this._isVertex(t)&&(l=this._moveRelatedCoordinates(l,t,m),l=this._moveSelectedHandleCoordinates(l,t,i,s,"polygon"===o.type),this._updateMidpointGraphicLocations(l)),this._updateGraphicGeometry(o.clone());const g=n.pointToVector(e),x=this._getVertexFromEditGeometry(t),V=n.getZ(g),T=g[0]-x.pos[0],C=g[1]-x.pos[1],Rt=null!=V?V-x.pos[2]:0;this._editGeometryOperations?.moveVertices([x],T,C,Rt),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:s}=e.attributes;for(const r of s){const o=this.vertexGraphics.at(r),{pathIndex:n,pointIndex:a}=o.attributes;t[n][a]=i,o.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,s,r){for(const o of this.selectedVertices)if(o!==e){const{pathIndex:n,pointIndex:a,relatedGraphicIndices:d}=o.attributes,l=(0,Q.lR)(o.geometry,i,s,this.view),p=(0,G.$K)(l),m=t[n].length-1;t[n][a]=p,o.geometry=l,r&&(0===a?t[n][m]=p:a===m&&(t[n][0]=p));for(const g of d){const x=this.vertexGraphics.at(g),{pathIndex:V,pointIndex:T}=x.attributes;t[V][T]=p,x.geometry=l}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,s=i.geometry;if(null==s||"polygon"!==s.type&&"polyline"!==s.type)return[];const r=s.clone(),o=[],{pathIndex:n,pointIndexStart:a,pointIndexEnd:d}=t.attributes,l=(0,G.$K)(t.geometry),p=0===d?a+1:d,m=(0,G.$K)(r);return m[n].splice(p,0,l),t.attributes={...e,pathIndex:n,pointIndex:p,relatedGraphicIndices:[]},o.push({coordinates:m[n][p],componentIndex:n,vertexIndex:p}),this._updateGraphicGeometry(r),o}_addToSelection(t){const e=F(t);for(const i of e)i.symbol=this.symbols.vertices.selected,this.selectedVertices.add(i),this._updateTooltip(i);this._emitSelectEvent(e)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,s=e?i.hover:i.default;this.selectedVertices.remove(t),t.symbol=s,this._emitDeselectEvent([t]),this._updateTooltip()}_clearSelection(){const t=this.selectedVertices.toArray();if(t.length>0){for(const e of t)e.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(t),this._updateTooltip()}}_keyDownHandler(t){null==this._activeOperationInfo&&(0,b.wG)(t,this.tooltip)||xt.NE.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(null==e||"polygon"!==e.type&&"polyline"!==e.type||"polygon"===e.type&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),s=e.clone();let r=(0,G.$K)(s);const o=[],n=F(t);for(const a of n){const{x:d,y:l}=a.geometry;for(let p=0;p<r.length;p++){const m=r[p];for(let g=0;g<m.length;g++){const[x,V]=m[g];d===x&&l===V&&(o.push({coordinates:r[p][g],componentIndex:p,vertexIndex:g}),r[p].splice(Number(g),1))}}}if("polygon"===s.type)r=r.filter(a=>{if(a.length<2)return!1;const[d,l]=a[0],[p,m]=a[a.length-1];return(2!==a.length||d!==p||l!==m)&&(d===p&&l===m||a.push(a[0]),!0)}),s.rings=r;else{for(const a of r)1===a.length&&r.splice(r.indexOf(a),1);s.paths=r}this._updateGraphicGeometry(s),this.refresh(),this._emitVertexRemoveEvent(n,i,o)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){let i=null;const{graphic:s,view:r,tooltipInfos:o}=this,n=s?.geometry;"point"===n?.type?i=o.movePoint:this._selectedVertex?i=o.selectedVertex:t===this.graphic?(i=o.translateGraphic,function yt(t,e,i){t.clear(),k(t,e,i)}(i,r,e)):t&&this.selectedVertices.length>1&&(i=o.translateVertices,function mt(t,e,i,s){t.clear(),"polygon"===i?.type?t.area=(0,Z.n)(i):"polyline"===i?.type&&(t.totalLength=(0,A.ob)(i)),k(t,e,s)}(i,r,n,e)),this.activeTooltipInfo=i}_updateGraphicGeometry(t){this._updateHandlesOnExternalGeometryChange?.pause(),this.graphic.geometry=t,this._updateHandlesOnExternalGeometryChange?.resume()}_emitMoveStartEvent(t,e){const i=new Et(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart?.(i)}_emitMoveEvent(t,e){const i=new Tt(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove?.(i)}_emitMoveStopEvent(t,e){if(null==t||null==e){const s=this._activeOperationInfo;if(!s)return;t=s.totalDx,e=s.totalDy}const i=new bt(this.graphic,t,e);this.emit("move-stop",i),this.callbacks.onMoveStop?.(i)}_emitReshapeStartEvent(t){const e=new Vt(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-start",e),this.callbacks.onReshapeStart?.(e)}_emitReshapeEvent(t){const e=new _t(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape",e),this.callbacks.onReshape?.(e)}_emitReshapeStopEvent(t){const e=new St(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-stop",e),this.callbacks.onReshapeStop?.(e)}_emitSelectEvent(t){const e=new It(t);this.emit("select",e),this.callbacks.onVertexSelect?.(e)}_emitDeselectEvent(t){const e=new Ot(t);this.emit("deselect",e),this.callbacks.onVertexDeselect?.(e)}_emitVertexAddEvent(t,e,i){const s=new wt(t,this.graphic,e,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd?.(s)}_emitVertexRemoveEvent(t,e,i){const s=new At(t,this.graphic,e,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove?.(s)}_logGeometryTypeError(){N.A.getLogger(this).error(new $.A("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function P(t){const e=(0,G.$K)(t.clone());if("polygon"===t.type)for(const i of e){const s=i[i.length-1];i[0][0]===s[0]&&i[0][1]===s[1]&&i.length>2&&i.pop()}return e}function D({attributes:t}){return[t?.pathIndex||0,t?.pointIndex||0]}function F(t){return t instanceof I.A?[t]:[...t]}(0,c._)([(0,v.MZ)()],y.prototype,"_activeOperationInfo",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"_coordinateHelper",null),(0,c._)([(0,v.MZ)()],y.prototype,"_editGeometryOperations",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"tooltip",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"tooltipInfos",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"activeTooltipInfo",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"_selectedVertex",null),(0,c._)([(0,v.MZ)()],y.prototype,"_tooltipsContext",null),(0,c._)([(0,v.MZ)()],y.prototype,"callbacks",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"enableMidpoints",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"enableMovement",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"enableVertices",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"graphic",void 0),(0,c._)([(0,v.MZ)({value:!0})],y.prototype,"highlightsEnabled",null),(0,c._)([(0,v.MZ)()],y.prototype,"layer",void 0),(0,c._)([(0,v.MZ)({readOnly:!0})],y.prototype,"midpointGraphics",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"midpointSymbol",void 0),(0,c._)([(0,v.MZ)({readOnly:!0})],y.prototype,"selectedVertices",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"snappingManager",void 0),(0,c._)([(0,v.MZ)({readOnly:!0})],y.prototype,"state",null),(0,c._)([(0,v.MZ)()],y.prototype,"symbols",void 0),(0,c._)([(0,v.MZ)({type:z.A})],y.prototype,"sketchOptions",void 0),(0,c._)([(0,v.MZ)({readOnly:!0})],y.prototype,"type",void 0),(0,c._)([(0,v.MZ)({readOnly:!0})],y.prototype,"vertexGraphics",void 0),(0,c._)([(0,v.MZ)()],y.prototype,"view",void 0),y=(0,c._)([(0,R.$)("esri.views.draw.support.Reshape")],y);const Ht=y}}]);